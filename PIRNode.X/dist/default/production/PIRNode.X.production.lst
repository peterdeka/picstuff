

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Sep  8 22:54:18 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  0092                     	;# 
    51  0098                     	;# 
    52  0099                     	;# 
    53  009A                     	;# 
    54  009B                     	;# 
    55  009C                     	;# 
    56  009D                     	;# 
    57  009F                     	;# 
    58                           
    59                           	psect	eeprom_data
    60  0000  0041 0050 0000 0000 0000 0000 0000 0000 	db	65,80,0,0,0,0,0,0	;# 
    61  000B                     _INTCONbits	set	11
    62  0006                     _PORTB	set	6
    63  001A                     _RCREG	set	26
    64  0018                     _RCSTA	set	24
    65  0019                     _TXREG	set	25
    66  005F                     _GIE	set	95
    67  0059                     _INTF	set	89
    68  005E                     _PEIE	set	94
    69  0065                     _RCIF	set	101
    70  0064                     _TXIF	set	100
    71  009B                     _EEADR	set	155
    72  009C                     _EECON1	set	156
    73  009A                     _EEDATA	set	154
    74  0099                     _SPBRG	set	153
    75  0086                     _TRISB	set	134
    76  0098                     _TXSTA	set	152
    77  0465                     _RCIE	set	1125
    78  04E0                     _RD	set	1248
    79  0464                     _TXIE	set	1124
    80  04E1                     _WR	set	1249
    81                           
    82                           	psect	strings
    83  0148                     __pstrings:	
    84  0148                     stringtab:	
    85  0148                     __stringtab:	
    86  0148                     stringcode:	
    87                           ;	String table - string pointers are 1 byte each
    88                           
    89  0148                     stringdir:	
    90  0148  3001               	movlw	high stringdir
    91  0149  008A               	movwf	10
    92  014A  0804               	movf	4,w
    93  014B  0A84               	incf	4,f
    94  014C  0782               	addwf	2,f
    95  014D                     __stringbase:	
    96  014D  3400               	retlw	0
    97  014E                     __end_of__stringtab:	
    98  014E                     STR_1:	
    99  014E  342A               	retlw	42	;'*'
   100  014F  347B               	retlw	123	;'{'
   101  0150  3422               	retlw	34	;'"'
   102  0151  3469               	retlw	105	;'i'
   103  0152  3464               	retlw	100	;'d'
   104  0153  3422               	retlw	34	;'"'
   105  0154  343A               	retlw	58	;':'
   106  0155  3422               	retlw	34	;'"'
   107  0156  3441               	retlw	65	;'A'
   108  0157  3422               	retlw	34	;'"'
   109  0158  342C               	retlw	44	;','
   110  0159  3422               	retlw	34	;'"'
   111  015A  3474               	retlw	116	;'t'
   112  015B  3422               	retlw	34	;'"'
   113  015C  343A               	retlw	58	;':'
   114  015D  3422               	retlw	34	;'"'
   115  015E  3450               	retlw	80	;'P'
   116  015F  3422               	retlw	34	;'"'
   117  0160  342C               	retlw	44	;','
   118  0161  3422               	retlw	34	;'"'
   119  0162  346D               	retlw	109	;'m'
   120  0163  3474               	retlw	116	;'t'
   121  0164  3422               	retlw	34	;'"'
   122  0165  343A               	retlw	58	;':'
   123  0166  3422               	retlw	34	;'"'
   124  0167  3452               	retlw	82	;'R'
   125  0168  3445               	retlw	69	;'E'
   126  0169  3447               	retlw	71	;'G'
   127  016A  3422               	retlw	34	;'"'
   128  016B  342C               	retlw	44	;','
   129  016C  3422               	retlw	34	;'"'
   130  016D  3476               	retlw	118	;'v'
   131  016E  3422               	retlw	34	;'"'
   132  016F  343A               	retlw	58	;':'
   133  0170  347B               	retlw	123	;'{'
   134  0171  3422               	retlw	34	;'"'
   135  0172  3473               	retlw	115	;'s'
   136  0173  3422               	retlw	34	;'"'
   137  0174  343A               	retlw	58	;':'
   138  0175  3431               	retlw	49	;'1'
   139  0176  347D               	retlw	125	;'}'
   140  0177  347D               	retlw	125	;'}'
   141  0178  342D               	retlw	45	;'-'
   142  0179  3400               	retlw	0
   143  017A                     STR_2:	
   144  017A  342A               	retlw	42	;'*'
   145  017B  347B               	retlw	123	;'{'
   146  017C  3422               	retlw	34	;'"'
   147  017D  3469               	retlw	105	;'i'
   148  017E  3464               	retlw	100	;'d'
   149  017F  3422               	retlw	34	;'"'
   150  0180  343A               	retlw	58	;':'
   151  0181  3422               	retlw	34	;'"'
   152  0182  3430               	retlw	48	;'0'
   153  0183  3422               	retlw	34	;'"'
   154  0184  342C               	retlw	44	;','
   155  0185  3422               	retlw	34	;'"'
   156  0186  3474               	retlw	116	;'t'
   157  0187  3422               	retlw	34	;'"'
   158  0188  343A               	retlw	58	;':'
   159  0189  3422               	retlw	34	;'"'
   160  018A  3430               	retlw	48	;'0'
   161  018B  3422               	retlw	34	;'"'
   162  018C  342C               	retlw	44	;','
   163  018D  3422               	retlw	34	;'"'
   164  018E  346D               	retlw	109	;'m'
   165  018F  3474               	retlw	116	;'t'
   166  0190  3422               	retlw	34	;'"'
   167  0191  343A               	retlw	58	;':'
   168  0192  3422               	retlw	34	;'"'
   169  0193  3444               	retlw	68	;'D'
   170  0194  3441               	retlw	65	;'A'
   171  0195  3454               	retlw	84	;'T'
   172  0196  3422               	retlw	34	;'"'
   173  0197  342C               	retlw	44	;','
   174  0198  3422               	retlw	34	;'"'
   175  0199  3476               	retlw	118	;'v'
   176  019A  3422               	retlw	34	;'"'
   177  019B  343A               	retlw	58	;':'
   178  019C  347B               	retlw	123	;'{'
   179  019D  3422               	retlw	34	;'"'
   180  019E  3473               	retlw	115	;'s'
   181  019F  3422               	retlw	34	;'"'
   182  01A0  343A               	retlw	58	;':'
   183  01A1  3431               	retlw	49	;'1'
   184  01A2  347D               	retlw	125	;'}'
   185  01A3  347D               	retlw	125	;'}'
   186  01A4  342D               	retlw	45	;'-'
   187  01A5  3400               	retlw	0
   188                           
   189                           ; #config settings
   190  0000                     
   191                           	psect	cinit
   192  0011                     start_initialization:	
   193  0011                     __initialization:	
   194                           
   195                           ; Clear objects allocated to BITCOMMON
   196  0011  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   197                           
   198                           ; Clear objects allocated to COMMON
   199  0012  01F8               	clrf	__pbssCOMMON& (0+127)
   200  0013                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0013                     __end_of__initialization:	
   204  0013  0183               	clrf	3
   205  0014  29A6               	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bitbssCOMMON
   208  03B8                     __pbitbssCOMMON:	
   209  03B8                     _flag_interrupcao:	
   210  03B8                     	ds	1
   211  03B9                     _flag_sensor:	
   212  03B9                     	ds	1
   213                           
   214                           	psect	bssCOMMON
   215  0078                     __pbssCOMMON:	
   216  0078                     _caracter:	
   217  0078                     	ds	1
   218                           
   219                           	psect	cstackCOMMON
   220  0070                     __pcstackCOMMON:	
   221  0070                     ?_RS232:	
   222  0070                     ??_RS232:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_escreve:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_imprime:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_main:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_eeprom_read:	
   235                           ; 0 bytes @ 0x0
   236                           
   237                           
   238                           ; 1 bytes @ 0x0
   239  0070                     	ds	5
   240  0075                     ??_eeprom_read:	
   241  0075                     ??_escreve:	
   242                           ; 0 bytes @ 0x5
   243                           
   244  0075                     ??___aldiv:	
   245                           ; 0 bytes @ 0x5
   246                           
   247  0075                     ?_strlen:	
   248                           ; 0 bytes @ 0x5
   249                           
   250  0075                     escreve@valor:	
   251                           ; 2 bytes @ 0x5
   252                           
   253                           
   254                           ; 1 bytes @ 0x5
   255  0075                     	ds	1
   256  0076                     eeprom_read@addr:	
   257                           
   258                           ; 1 bytes @ 0x6
   259  0076                     	ds	1
   260                           
   261                           	psect	cstackBANK0
   262  0020                     __pcstackBANK0:	
   263  0020                     ??_strlen:	
   264  0020                     ?___aldiv:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0020                     ___aldiv@divisor:	
   268                           ; 4 bytes @ 0x0
   269                           
   270                           
   271                           ; 4 bytes @ 0x0
   272  0020                     	ds	4
   273  0024                     strlen@s:	
   274  0024                     ___aldiv@dividend:	
   275                           ; 1 bytes @ 0x4
   276                           
   277                           
   278                           ; 4 bytes @ 0x4
   279  0024                     	ds	1
   280  0025                     strlen@cp:	
   281                           
   282                           ; 1 bytes @ 0x5
   283  0025                     	ds	1
   284  0026                     ??_imprime:	
   285                           
   286                           ; 0 bytes @ 0x6
   287  0026                     	ds	1
   288  0027                     imprime@tamanho:	
   289                           
   290                           ; 1 bytes @ 0x7
   291  0027                     	ds	1
   292  0028                     imprime@frase:	
   293  0028                     ___aldiv@counter:	
   294                           ; 1 bytes @ 0x8
   295                           
   296                           
   297                           ; 1 bytes @ 0x8
   298  0028                     	ds	1
   299  0029                     imprime@indice:	
   300  0029                     ___aldiv@sign:	
   301                           ; 1 bytes @ 0x9
   302                           
   303                           
   304                           ; 1 bytes @ 0x9
   305  0029                     	ds	1
   306  002A                     ___aldiv@quotient:	
   307                           
   308                           ; 4 bytes @ 0xA
   309  002A                     	ds	4
   310  002E                     ?_inicializa_RS232:	
   311  002E                     inicializa_RS232@velocidade:	
   312                           ; 0 bytes @ 0xE
   313                           
   314                           
   315                           ; 4 bytes @ 0xE
   316  002E                     	ds	4
   317  0032                     inicializa_RS232@modo:	
   318                           
   319                           ; 2 bytes @ 0x12
   320  0032                     	ds	2
   321  0034                     ??_inicializa_RS232:	
   322                           
   323                           ; 0 bytes @ 0x14
   324  0034                     	ds	4
   325  0038                     inicializa_RS232@valor:	
   326                           
   327                           ; 2 bytes @ 0x18
   328  0038                     	ds	2
   329  003A                     _inicializa_RS232$511:	
   330                           
   331                           ; 4 bytes @ 0x1A
   332  003A                     	ds	4
   333  003E                     ??_main:	
   334                           
   335                           ; 0 bytes @ 0x1E
   336  003E                     	ds	3
   337  0041                     main@myid:	
   338                           
   339                           ; 1 bytes @ 0x21
   340  0041                     	ds	1
   341  0042                     main@mytype:	
   342                           
   343                           ; 1 bytes @ 0x22
   344  0042                     	ds	1
   345                           
   346                           	psect	maintext
   347  01A6                     __pmaintext:	
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 93 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  mytype          1   34[BANK0 ] unsigned char 
   358 ;;  myid            1   33[BANK0 ] unsigned char 
   359 ;; Return value:  Size  Location     Type
   360 ;;		None               void
   361 ;; Registers used:
   362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : B00/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   368 ;;      Params:         0       0       0       0
   369 ;;      Locals:         0       2       0       0
   370 ;;      Temps:          0       3       0       0
   371 ;;      Totals:         0       5       0       0
   372 ;;Total ram usage:        5 bytes
   373 ;; Hardware stack levels required when called:    4
   374 ;; This function calls:
   375 ;;		_eeprom_read
   376 ;;		_imprime
   377 ;;		_inicializa_RS232
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _main
   385  01A6                     _main:	
   386                           
   387                           ;main.c: 95: TRISB = 0X03;
   388                           
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   391  01A6  3003               	movlw	3
   392  01A7  1683               	bsf	3,5	;RP0=1, select bank1
   393  01A8  1303               	bcf	3,6	;RP1=0, select bank1
   394  01A9  0086               	movwf	6	;volatile
   395                           
   396                           ;main.c: 96: PORTB = 0;
   397  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   398  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   399  01AC  0186               	clrf	6	;volatile
   400                           
   401                           ;main.c: 97: inicializa_RS232(9600,1);
   402  01AD  3000               	movlw	0
   403  01AE  00B1               	movwf	inicializa_RS232@velocidade+3
   404  01AF  3000               	movlw	0
   405  01B0  00B0               	movwf	inicializa_RS232@velocidade+2
   406  01B1  3025               	movlw	37
   407  01B2  00AF               	movwf	inicializa_RS232@velocidade+1
   408  01B3  3080               	movlw	128
   409  01B4  00AE               	movwf	inicializa_RS232@velocidade
   410  01B5  3001               	movlw	1
   411  01B6  00B2               	movwf	inicializa_RS232@modo
   412  01B7  3000               	movlw	0
   413  01B8  00B3               	movwf	inicializa_RS232@modo+1
   414  01B9  2015               	fcall	_inicializa_RS232
   415                           
   416                           ;main.c: 98: PEIE = 1;
   417  01BA  170B               	bsf	11,6	;volatile
   418                           
   419                           ;main.c: 99: GIE = 1;
   420  01BB  178B               	bsf	11,7	;volatile
   421                           
   422                           ;main.c: 100: _delay((unsigned long)((8000)*(4000000/4000.0)));
   423  01BC  3029               	movlw	41
   424  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   425  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   426  01BF  00C0               	movwf	??_main+2
   427  01C0  3096               	movlw	150
   428  01C1  00BF               	movwf	??_main+1
   429  01C2  30A6               	movlw	166
   430  01C3  00BE               	movwf	??_main
   431  01C4                     u427:	
   432  01C4  0BBE               	decfsz	??_main,f
   433  01C5  29C4               	goto	u427
   434  01C6  0BBF               	decfsz	??_main+1,f
   435  01C7  29C4               	goto	u427
   436  01C8  0BC0               	decfsz	??_main+2,f
   437  01C9  29C4               	goto	u427
   438                           
   439                           ;main.c: 101: INTCONbits.INTE = 1;
   440  01CA  160B               	bsf	11,4	;volatile
   441                           
   442                           ;main.c: 103: unsigned char myid = 0x00;
   443  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   444  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   445  01CD  01C1               	clrf	main@myid
   446                           
   447                           ;main.c: 104: unsigned char mytype = 0x00;
   448  01CE  01C2               	clrf	main@mytype
   449                           
   450                           ;main.c: 105: myid = eeprom_read (0x00);
   451  01CF  3000               	movlw	0
   452  01D0  2267               	fcall	_eeprom_read
   453  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   454  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   455  01D3  00BE               	movwf	??_main
   456  01D4  083E               	movf	??_main,w
   457  01D5  00C1               	movwf	main@myid
   458                           
   459                           ;main.c: 106: mytype = eeprom_read (0x01);
   460  01D6  3001               	movlw	1
   461  01D7  2267               	fcall	_eeprom_read
   462  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   463  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   464  01DA  00BE               	movwf	??_main
   465  01DB  083E               	movf	??_main,w
   466  01DC  00C2               	movwf	main@mytype
   467                           
   468                           ;main.c: 109: imprime("*{\"id\":\"A\",\"t\":\"P\",\"mt\":\"REG\",\"v\":{\"s\":1}}-");
   469  01DD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   470  01DE  222B               	fcall	_imprime
   471                           
   472                           ;main.c: 110: _delay((unsigned long)((3000)*(4000000/4000.0)));
   473  01DF  3010               	movlw	16
   474  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   475  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   476  01E2  00C0               	movwf	??_main+2
   477  01E3  3039               	movlw	57
   478  01E4  00BF               	movwf	??_main+1
   479  01E5  301B               	movlw	27
   480  01E6  00BE               	movwf	??_main
   481  01E7                     u437:	
   482  01E7  0BBE               	decfsz	??_main,f
   483  01E8  29E7               	goto	u437
   484  01E9  0BBF               	decfsz	??_main+1,f
   485  01EA  29E7               	goto	u437
   486  01EB  0BC0               	decfsz	??_main+2,f
   487  01EC  29E7               	goto	u437
   488  01ED  29EE               	nop2
   489  01EE                     l859:	
   490                           ;main.c: 112: for(;;)
   491                           
   492                           
   493                           ;main.c: 113: {
   494                           ;main.c: 122: if(flag_sensor == 1){
   495  01EE  1CF7               	btfss	_flag_sensor/(0+8),_flag_sensor& (0+7)
   496  01EF  29F3               	goto	l865
   497                           
   498                           ;main.c: 124: imprime("*{\"id\":\"0\",\"t\":\"0\",\"mt\":\"DAT\",\"v\":{\"s\":1}}-");
   499  01F0  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   500  01F1  222B               	fcall	_imprime
   501                           
   502                           ;main.c: 125: flag_sensor = 0;
   503  01F2  10F7               	bcf	_flag_sensor/(0+8),_flag_sensor& (0+7)
   504  01F3                     l865:	
   505                           
   506                           ;main.c: 126: }
   507                           ;main.c: 127: _delay((unsigned long)((2000)*(4000000/4000.0)));
   508  01F3  300B               	movlw	11
   509  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   510  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   511  01F6  00C0               	movwf	??_main+2
   512  01F7  3026               	movlw	38
   513  01F8  00BF               	movwf	??_main+1
   514  01F9  3066               	movlw	102
   515  01FA  00BE               	movwf	??_main
   516  01FB                     u447:	
   517  01FB  0BBE               	decfsz	??_main,f
   518  01FC  29FB               	goto	u447
   519  01FD  0BBF               	decfsz	??_main+1,f
   520  01FE  29FB               	goto	u447
   521  01FF  0BC0               	decfsz	??_main+2,f
   522  0200  29FB               	goto	u447
   523  0201  2A02               	nop2
   524                           
   525                           ;main.c: 128: }
   526  0202  29EE               	goto	l859
   527  0203                     __end_of_main:	
   528                           
   529                           	psect	text1
   530  0015                     __ptext1:	
   531 ;; *************** function _inicializa_RS232 *****************
   532 ;; Defined at:
   533 ;;		line 46 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  velocidade      4   14[BANK0 ] long 
   536 ;;  modo            2   18[BANK0 ] int 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  valor           2   24[BANK0 ] int 
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   548 ;;      Params:         0       6       0       0
   549 ;;      Locals:         0       6       0       0
   550 ;;      Temps:          0       4       0       0
   551 ;;      Totals:         0      16       0       0
   552 ;;Total ram usage:       16 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    2
   555 ;; This function calls:
   556 ;;		___aldiv
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _inicializa_RS232
   564  0015                     _inicializa_RS232:	
   565                           
   566                           ;main.c: 52: RCSTA = 0x90;
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _inicializa_RS232: [wreg+status,2+status,0+pclath+cstack]
   570  0015  3090               	movlw	144
   571  0016  1283               	bcf	3,5	;RP0=0, select bank0
   572  0017  1303               	bcf	3,6	;RP1=0, select bank0
   573  0018  0098               	movwf	24	;volatile
   574                           
   575                           ;main.c: 55: int valor;
   576                           ;main.c: 56: if(modo == 1)
   577  0019  0332               	decf	inicializa_RS232@modo,w
   578  001A  0433               	iorwf	inicializa_RS232@modo+1,w
   579  001B  1D03               	btfss	3,2
   580  001C  2860               	goto	l751
   581                           
   582                           ;main.c: 57: {
   583                           ;main.c: 58: TXSTA = 0x24;
   584  001D  3024               	movlw	36
   585  001E  1683               	bsf	3,5	;RP0=1, select bank1
   586  001F  1303               	bcf	3,6	;RP1=0, select bank1
   587  0020  0098               	movwf	24	;volatile
   588                           
   589                           ;main.c: 59: valor =(int)(((4000000/velocidade)-16)/16);
   590  0021  30F0               	movlw	240
   591  0022  1283               	bcf	3,5	;RP0=0, select bank0
   592  0023  1303               	bcf	3,6	;RP1=0, select bank0
   593  0024  00B4               	movwf	??_inicializa_RS232
   594  0025  30FF               	movlw	255
   595  0026  00B5               	movwf	??_inicializa_RS232+1
   596  0027  30FF               	movlw	255
   597  0028  00B6               	movwf	??_inicializa_RS232+2
   598  0029  30FF               	movlw	255
   599  002A  00B7               	movwf	??_inicializa_RS232+3
   600  002B  0831               	movf	inicializa_RS232@velocidade+3,w
   601  002C  00A3               	movwf	___aldiv@divisor+3
   602  002D  0830               	movf	inicializa_RS232@velocidade+2,w
   603  002E  00A2               	movwf	___aldiv@divisor+2
   604  002F  082F               	movf	inicializa_RS232@velocidade+1,w
   605  0030  00A1               	movwf	___aldiv@divisor+1
   606  0031  082E               	movf	inicializa_RS232@velocidade,w
   607  0032  00A0               	movwf	___aldiv@divisor
   608  0033  3000               	movlw	0
   609  0034  00A7               	movwf	___aldiv@dividend+3
   610  0035  303D               	movlw	61
   611  0036  00A6               	movwf	___aldiv@dividend+2
   612  0037  3009               	movlw	9
   613  0038  00A5               	movwf	___aldiv@dividend+1
   614  0039  3000               	movlw	0
   615  003A  00A4               	movwf	___aldiv@dividend
   616  003B  20B9               	fcall	___aldiv
   617  003C  1283               	bcf	3,5	;RP0=0, select bank0
   618  003D  1303               	bcf	3,6	;RP1=0, select bank0
   619  003E  0820               	movf	?___aldiv,w
   620  003F  07B4               	addwf	??_inicializa_RS232,f
   621  0040  0821               	movf	?___aldiv+1,w
   622  0041  1803               	skipnc
   623  0042  0F21               	incfsz	?___aldiv+1,w
   624  0043  2845               	goto	u340
   625  0044  2846               	goto	u341
   626  0045                     u340:	
   627  0045  07B5               	addwf	??_inicializa_RS232+1,f
   628  0046                     u341:	
   629  0046  0822               	movf	?___aldiv+2,w
   630  0047  1803               	skipnc
   631  0048  0F22               	incfsz	?___aldiv+2,w
   632  0049  284B               	goto	u342
   633  004A  284C               	goto	u343
   634  004B                     u342:	
   635  004B  07B6               	addwf	??_inicializa_RS232+2,f
   636  004C                     u343:	
   637  004C  0823               	movf	?___aldiv+3,w
   638  004D  1803               	skipnc
   639  004E  0A23               	incf	?___aldiv+3,w
   640  004F  07B7               	addwf	??_inicializa_RS232+3,f
   641  0050  0837               	movf	??_inicializa_RS232+3,w
   642  0051  00BD               	movwf	_inicializa_RS232$511+3
   643  0052  0836               	movf	??_inicializa_RS232+2,w
   644  0053  00BC               	movwf	_inicializa_RS232$511+2
   645  0054  0835               	movf	??_inicializa_RS232+1,w
   646  0055  00BB               	movwf	_inicializa_RS232$511+1
   647  0056  0834               	movf	??_inicializa_RS232,w
   648  0057  00BA               	movwf	_inicializa_RS232$511
   649                           
   650                           ;main.c: 59: valor =(int)(((4000000/velocidade)-16)/16);
   651  0058  3000               	movlw	0
   652  0059  00A3               	movwf	___aldiv@divisor+3
   653  005A  3000               	movlw	0
   654  005B  00A2               	movwf	___aldiv@divisor+2
   655  005C  3000               	movlw	0
   656  005D  00A1               	movwf	___aldiv@divisor+1
   657  005E  3010               	movlw	16
   658  005F  28A2               	goto	L1
   659  0060                     l751:	
   660                           ;main.c: 60: }
   661                           
   662                           
   663                           ;main.c: 61: else
   664                           ;main.c: 62: {
   665                           ;main.c: 63: TXSTA = 0x20;
   666  0060  3020               	movlw	32
   667  0061  1683               	bsf	3,5	;RP0=1, select bank1
   668  0062  1303               	bcf	3,6	;RP1=0, select bank1
   669  0063  0098               	movwf	24	;volatile
   670                           
   671                           ;main.c: 64: valor =(int)(((4000000/velocidade)-64)/64);
   672  0064  30C0               	movlw	192
   673  0065  1283               	bcf	3,5	;RP0=0, select bank0
   674  0066  1303               	bcf	3,6	;RP1=0, select bank0
   675  0067  00B4               	movwf	??_inicializa_RS232
   676  0068  30FF               	movlw	255
   677  0069  00B5               	movwf	??_inicializa_RS232+1
   678  006A  30FF               	movlw	255
   679  006B  00B6               	movwf	??_inicializa_RS232+2
   680  006C  30FF               	movlw	255
   681  006D  00B7               	movwf	??_inicializa_RS232+3
   682  006E  0831               	movf	inicializa_RS232@velocidade+3,w
   683  006F  00A3               	movwf	___aldiv@divisor+3
   684  0070  0830               	movf	inicializa_RS232@velocidade+2,w
   685  0071  00A2               	movwf	___aldiv@divisor+2
   686  0072  082F               	movf	inicializa_RS232@velocidade+1,w
   687  0073  00A1               	movwf	___aldiv@divisor+1
   688  0074  082E               	movf	inicializa_RS232@velocidade,w
   689  0075  00A0               	movwf	___aldiv@divisor
   690  0076  3000               	movlw	0
   691  0077  00A7               	movwf	___aldiv@dividend+3
   692  0078  303D               	movlw	61
   693  0079  00A6               	movwf	___aldiv@dividend+2
   694  007A  3009               	movlw	9
   695  007B  00A5               	movwf	___aldiv@dividend+1
   696  007C  3000               	movlw	0
   697  007D  00A4               	movwf	___aldiv@dividend
   698  007E  20B9               	fcall	___aldiv
   699  007F  1283               	bcf	3,5	;RP0=0, select bank0
   700  0080  1303               	bcf	3,6	;RP1=0, select bank0
   701  0081  0820               	movf	?___aldiv,w
   702  0082  07B4               	addwf	??_inicializa_RS232,f
   703  0083  0821               	movf	?___aldiv+1,w
   704  0084  1803               	skipnc
   705  0085  0F21               	incfsz	?___aldiv+1,w
   706  0086  2888               	goto	u350
   707  0087  2889               	goto	u351
   708  0088                     u350:	
   709  0088  07B5               	addwf	??_inicializa_RS232+1,f
   710  0089                     u351:	
   711  0089  0822               	movf	?___aldiv+2,w
   712  008A  1803               	skipnc
   713  008B  0F22               	incfsz	?___aldiv+2,w
   714  008C  288E               	goto	u352
   715  008D  288F               	goto	u353
   716  008E                     u352:	
   717  008E  07B6               	addwf	??_inicializa_RS232+2,f
   718  008F                     u353:	
   719  008F  0823               	movf	?___aldiv+3,w
   720  0090  1803               	skipnc
   721  0091  0A23               	incf	?___aldiv+3,w
   722  0092  07B7               	addwf	??_inicializa_RS232+3,f
   723  0093  0837               	movf	??_inicializa_RS232+3,w
   724  0094  00BD               	movwf	_inicializa_RS232$511+3
   725  0095  0836               	movf	??_inicializa_RS232+2,w
   726  0096  00BC               	movwf	_inicializa_RS232$511+2
   727  0097  0835               	movf	??_inicializa_RS232+1,w
   728  0098  00BB               	movwf	_inicializa_RS232$511+1
   729  0099  0834               	movf	??_inicializa_RS232,w
   730  009A  00BA               	movwf	_inicializa_RS232$511
   731                           
   732                           ;main.c: 64: valor =(int)(((4000000/velocidade)-64)/64);
   733  009B  3000               	movlw	0
   734  009C  00A3               	movwf	___aldiv@divisor+3
   735  009D  3000               	movlw	0
   736  009E  00A2               	movwf	___aldiv@divisor+2
   737  009F  3000               	movlw	0
   738  00A0  00A1               	movwf	___aldiv@divisor+1
   739  00A1  3040               	movlw	64
   740  00A2                     L1:	
   741  00A2  00A0               	movwf	___aldiv@divisor
   742  00A3  083D               	movf	_inicializa_RS232$511+3,w
   743  00A4  00A7               	movwf	___aldiv@dividend+3
   744  00A5  083C               	movf	_inicializa_RS232$511+2,w
   745  00A6  00A6               	movwf	___aldiv@dividend+2
   746  00A7  083B               	movf	_inicializa_RS232$511+1,w
   747  00A8  00A5               	movwf	___aldiv@dividend+1
   748  00A9  083A               	movf	_inicializa_RS232$511,w
   749  00AA  00A4               	movwf	___aldiv@dividend
   750  00AB  20B9               	fcall	___aldiv
   751  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   752  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   753  00AE  0821               	movf	?___aldiv+1,w
   754  00AF  00B9               	movwf	inicializa_RS232@valor+1
   755  00B0  0820               	movf	?___aldiv,w
   756  00B1  00B8               	movwf	inicializa_RS232@valor
   757                           
   758                           ;main.c: 65: }
   759                           ;main.c: 66: SPBRG = valor;
   760  00B2  0838               	movf	inicializa_RS232@valor,w
   761  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   762  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   763  00B5  0099               	movwf	25	;volatile
   764                           
   765                           ;main.c: 67: RCIE = 1;
   766  00B6  168C               	bsf	12,5	;volatile
   767                           
   768                           ;main.c: 68: TXIE = 0;
   769  00B7  120C               	bcf	12,4	;volatile
   770  00B8  0008               	return
   771  00B9                     __end_of_inicializa_RS232:	
   772                           
   773                           	psect	text2
   774  00B9                     __ptext2:	
   775 ;; *************** function ___aldiv *****************
   776 ;; Defined at:
   777 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/aldiv.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  divisor         4    0[BANK0 ] long 
   780 ;;  dividend        4    4[BANK0 ] long 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  quotient        4   10[BANK0 ] long 
   783 ;;  sign            1    9[BANK0 ] unsigned char 
   784 ;;  counter         1    8[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  4    0[BANK0 ] long 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   794 ;;      Params:         0       8       0       0
   795 ;;      Locals:         0       6       0       0
   796 ;;      Temps:          1       0       0       0
   797 ;;      Totals:         1      14       0       0
   798 ;;Total ram usage:       15 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_inicializa_RS232
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function ___aldiv
   810  00B9                     ___aldiv:	
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   814  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   815  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   816  00BB  01A9               	clrf	___aldiv@sign
   817  00BC  1FA3               	btfss	___aldiv@divisor+3,7
   818  00BD  28CB               	goto	l224
   819  00BE  09A0               	comf	___aldiv@divisor,f
   820  00BF  09A1               	comf	___aldiv@divisor+1,f
   821  00C0  09A2               	comf	___aldiv@divisor+2,f
   822  00C1  09A3               	comf	___aldiv@divisor+3,f
   823  00C2  0AA0               	incf	___aldiv@divisor,f
   824  00C3  1903               	skipnz
   825  00C4  0AA1               	incf	___aldiv@divisor+1,f
   826  00C5  1903               	skipnz
   827  00C6  0AA2               	incf	___aldiv@divisor+2,f
   828  00C7  1903               	skipnz
   829  00C8  0AA3               	incf	___aldiv@divisor+3,f
   830  00C9  01A9               	clrf	___aldiv@sign
   831  00CA  0AA9               	incf	___aldiv@sign,f
   832  00CB                     l224:	
   833  00CB  1FA7               	btfss	___aldiv@dividend+3,7
   834  00CC  28DC               	goto	l711
   835  00CD  09A4               	comf	___aldiv@dividend,f
   836  00CE  09A5               	comf	___aldiv@dividend+1,f
   837  00CF  09A6               	comf	___aldiv@dividend+2,f
   838  00D0  09A7               	comf	___aldiv@dividend+3,f
   839  00D1  0AA4               	incf	___aldiv@dividend,f
   840  00D2  1903               	skipnz
   841  00D3  0AA5               	incf	___aldiv@dividend+1,f
   842  00D4  1903               	skipnz
   843  00D5  0AA6               	incf	___aldiv@dividend+2,f
   844  00D6  1903               	skipnz
   845  00D7  0AA7               	incf	___aldiv@dividend+3,f
   846  00D8  3001               	movlw	1
   847  00D9  00F5               	movwf	??___aldiv
   848  00DA  0875               	movf	??___aldiv,w
   849  00DB  06A9               	xorwf	___aldiv@sign,f
   850  00DC                     l711:	
   851  00DC  3000               	movlw	0
   852  00DD  00AD               	movwf	___aldiv@quotient+3
   853  00DE  3000               	movlw	0
   854  00DF  00AC               	movwf	___aldiv@quotient+2
   855  00E0  3000               	movlw	0
   856  00E1  00AB               	movwf	___aldiv@quotient+1
   857  00E2  3000               	movlw	0
   858  00E3  00AA               	movwf	___aldiv@quotient
   859  00E4  0823               	movf	___aldiv@divisor+3,w
   860  00E5  0422               	iorwf	___aldiv@divisor+2,w
   861  00E6  0421               	iorwf	___aldiv@divisor+1,w
   862  00E7  0420               	iorwf	___aldiv@divisor,w
   863  00E8  1903               	skipnz
   864  00E9  2931               	goto	l733
   865  00EA  01A8               	clrf	___aldiv@counter
   866  00EB  0AA8               	incf	___aldiv@counter,f
   867  00EC                     l719:	
   868  00EC  1BA3               	btfsc	___aldiv@divisor+3,7
   869  00ED  28FC               	goto	l721
   870  00EE  3001               	movlw	1
   871  00EF  00F5               	movwf	??___aldiv
   872  00F0                     u265:	
   873  00F0  1003               	clrc
   874  00F1  0DA0               	rlf	___aldiv@divisor,f
   875  00F2  0DA1               	rlf	___aldiv@divisor+1,f
   876  00F3  0DA2               	rlf	___aldiv@divisor+2,f
   877  00F4  0DA3               	rlf	___aldiv@divisor+3,f
   878  00F5  0BF5               	decfsz	??___aldiv,f
   879  00F6  28F0               	goto	u265
   880  00F7  3001               	movlw	1
   881  00F8  00F5               	movwf	??___aldiv
   882  00F9  0875               	movf	??___aldiv,w
   883  00FA  07A8               	addwf	___aldiv@counter,f
   884  00FB  28EC               	goto	l719
   885  00FC                     l721:	
   886  00FC  3001               	movlw	1
   887  00FD  00F5               	movwf	??___aldiv
   888  00FE                     u285:	
   889  00FE  1003               	clrc
   890  00FF  0DAA               	rlf	___aldiv@quotient,f
   891  0100  0DAB               	rlf	___aldiv@quotient+1,f
   892  0101  0DAC               	rlf	___aldiv@quotient+2,f
   893  0102  0DAD               	rlf	___aldiv@quotient+3,f
   894  0103  0BF5               	decfsz	??___aldiv,f
   895  0104  28FE               	goto	u285
   896  0105  0823               	movf	___aldiv@divisor+3,w
   897  0106  0227               	subwf	___aldiv@dividend+3,w
   898  0107  1D03               	skipz
   899  0108  2913               	goto	u295
   900  0109  0822               	movf	___aldiv@divisor+2,w
   901  010A  0226               	subwf	___aldiv@dividend+2,w
   902  010B  1D03               	skipz
   903  010C  2913               	goto	u295
   904  010D  0821               	movf	___aldiv@divisor+1,w
   905  010E  0225               	subwf	___aldiv@dividend+1,w
   906  010F  1D03               	skipz
   907  0110  2913               	goto	u295
   908  0111  0820               	movf	___aldiv@divisor,w
   909  0112  0224               	subwf	___aldiv@dividend,w
   910  0113                     u295:	
   911  0113  1C03               	skipc
   912  0114  2924               	goto	l729
   913  0115  0820               	movf	___aldiv@divisor,w
   914  0116  02A4               	subwf	___aldiv@dividend,f
   915  0117  0821               	movf	___aldiv@divisor+1,w
   916  0118  1C03               	skipc
   917  0119  0F21               	incfsz	___aldiv@divisor+1,w
   918  011A  02A5               	subwf	___aldiv@dividend+1,f
   919  011B  0822               	movf	___aldiv@divisor+2,w
   920  011C  1C03               	skipc
   921  011D  0F22               	incfsz	___aldiv@divisor+2,w
   922  011E  02A6               	subwf	___aldiv@dividend+2,f
   923  011F  0823               	movf	___aldiv@divisor+3,w
   924  0120  1C03               	skipc
   925  0121  0F23               	incfsz	___aldiv@divisor+3,w
   926  0122  02A7               	subwf	___aldiv@dividend+3,f
   927  0123  142A               	bsf	___aldiv@quotient,0
   928  0124                     l729:	
   929  0124  3001               	movlw	1
   930  0125                     u305:	
   931  0125  1003               	clrc
   932  0126  0CA3               	rrf	___aldiv@divisor+3,f
   933  0127  0CA2               	rrf	___aldiv@divisor+2,f
   934  0128  0CA1               	rrf	___aldiv@divisor+1,f
   935  0129  0CA0               	rrf	___aldiv@divisor,f
   936  012A  3EFF               	addlw	-1
   937  012B  1D03               	skipz
   938  012C  2925               	goto	u305
   939  012D  3001               	movlw	1
   940  012E  02A8               	subwf	___aldiv@counter,f
   941  012F  1D03               	btfss	3,2
   942  0130  28FC               	goto	l721
   943  0131                     l733:	
   944  0131  0829               	movf	___aldiv@sign,w
   945  0132  1903               	btfsc	3,2
   946  0133  293F               	goto	l737
   947  0134  09AA               	comf	___aldiv@quotient,f
   948  0135  09AB               	comf	___aldiv@quotient+1,f
   949  0136  09AC               	comf	___aldiv@quotient+2,f
   950  0137  09AD               	comf	___aldiv@quotient+3,f
   951  0138  0AAA               	incf	___aldiv@quotient,f
   952  0139  1903               	skipnz
   953  013A  0AAB               	incf	___aldiv@quotient+1,f
   954  013B  1903               	skipnz
   955  013C  0AAC               	incf	___aldiv@quotient+2,f
   956  013D  1903               	skipnz
   957  013E  0AAD               	incf	___aldiv@quotient+3,f
   958  013F                     l737:	
   959  013F  082D               	movf	___aldiv@quotient+3,w
   960  0140  00A3               	movwf	?___aldiv+3
   961  0141  082C               	movf	___aldiv@quotient+2,w
   962  0142  00A2               	movwf	?___aldiv+2
   963  0143  082B               	movf	___aldiv@quotient+1,w
   964  0144  00A1               	movwf	?___aldiv+1
   965  0145  082A               	movf	___aldiv@quotient,w
   966  0146  00A0               	movwf	?___aldiv
   967  0147  0008               	return
   968  0148                     __end_of___aldiv:	
   969                           
   970                           	psect	text3
   971  022B                     __ptext3:	
   972 ;; *************** function _imprime *****************
   973 ;; Defined at:
   974 ;;		line 77 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  frase           1    wreg     PTR const unsigned char 
   977 ;;		 -> STR_2(44), STR_1(44), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  frase           1    8[BANK0 ] PTR const unsigned char 
   980 ;;		 -> STR_2(44), STR_1(44), 
   981 ;;  indice          1    9[BANK0 ] unsigned char 
   982 ;;  tamanho         1    7[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   992 ;;      Params:         0       0       0       0
   993 ;;      Locals:         0       3       0       0
   994 ;;      Temps:          0       1       0       0
   995 ;;      Totals:         0       4       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    3
   999 ;; This function calls:
  1000 ;;		_escreve
  1001 ;;		_strlen
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _imprime
  1009  022B                     _imprime:	
  1010                           
  1011                           ;incstack = 0
  1012                           ; Regs used in _imprime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1013                           ;imprime@frase stored from wreg
  1014  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1015  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1016  022D  00A8               	movwf	imprime@frase
  1017                           
  1018                           ;main.c: 79: char indice = 0;
  1019  022E  01A9               	clrf	imprime@indice
  1020                           
  1021                           ;main.c: 80: char tamanho = strlen(frase);
  1022  022F  0828               	movf	imprime@frase,w
  1023  0230  2203               	fcall	_strlen
  1024  0231  0875               	movf	?_strlen,w
  1025  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0234  00A6               	movwf	??_imprime
  1028  0235  0826               	movf	??_imprime,w
  1029  0236  00A7               	movwf	imprime@tamanho
  1030  0237                     l831:	
  1031                           ;main.c: 81: while(indice < tamanho )
  1032                           
  1033  0237  0827               	movf	imprime@tamanho,w
  1034  0238  0229               	subwf	imprime@indice,w
  1035  0239  1803               	btfsc	3,0
  1036  023A  0008               	return
  1037                           
  1038                           ;main.c: 82: {
  1039                           ;main.c: 83: escreve(frase[indice]);
  1040  023B  0829               	movf	imprime@indice,w
  1041  023C  0728               	addwf	imprime@frase,w
  1042  023D  0084               	movwf	4
  1043  023E  2148               	fcall	stringdir
  1044  023F  227C               	fcall	_escreve
  1045                           
  1046                           ;main.c: 84: _delay((unsigned long)((1)*(4000000/4000.0)));
  1047  0240  30F9               	movlw	249
  1048  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0243  00A6               	movwf	??_imprime
  1051  0244                     u457:	
  1052  0244  0000               	nop
  1053  0245  0BA6               	decfsz	??_imprime,f
  1054  0246  2A44               	goto	u457
  1055  0247  2A48               	nop2	;nop
  1056  0248  0000               	nop
  1057                           
  1058                           ;main.c: 85: indice++;
  1059  0249  3001               	movlw	1
  1060  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1061  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1062  024C  00A6               	movwf	??_imprime
  1063  024D  0826               	movf	??_imprime,w
  1064  024E  07A9               	addwf	imprime@indice,f
  1065  024F  2A37               	goto	l831
  1066  0250                     __end_of_imprime:	
  1067                           
  1068                           	psect	text4
  1069  0203                     __ptext4:	
  1070 ;; *************** function _strlen *****************
  1071 ;; Defined at:
  1072 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/strlen.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  s               1    wreg     PTR const unsigned char 
  1075 ;;		 -> STR_2(44), STR_1(44), 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  1078 ;;		 -> STR_2(44), STR_1(44), 
  1079 ;;  cp              1    5[BANK0 ] PTR const unsigned char 
  1080 ;;		 -> STR_2(44), STR_1(44), 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2    5[COMMON] unsigned int 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1090 ;;      Params:         2       0       0       0
  1091 ;;      Locals:         0       2       0       0
  1092 ;;      Temps:          0       4       0       0
  1093 ;;      Totals:         2       6       0       0
  1094 ;;Total ram usage:        8 bytes
  1095 ;; Hardware stack levels used:    2
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_imprime
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _strlen
  1106  0203                     _strlen:	
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  1110                           ;strlen@s stored from wreg
  1111  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0205  00A4               	movwf	strlen@s
  1114  0206  0824               	movf	strlen@s,w
  1115  0207  00A0               	movwf	??_strlen
  1116  0208  0820               	movf	??_strlen,w
  1117  0209  00A5               	movwf	strlen@cp
  1118  020A                     l815:	
  1119  020A  0825               	movf	strlen@cp,w
  1120  020B  0084               	movwf	4
  1121  020C  2148               	fcall	stringdir
  1122  020D  3A00               	xorlw	0
  1123  020E  1903               	btfsc	3,2
  1124  020F  2A15               	goto	l817
  1125  0210  3001               	movlw	1
  1126  0211  00A0               	movwf	??_strlen
  1127  0212  0820               	movf	??_strlen,w
  1128  0213  07A5               	addwf	strlen@cp,f
  1129  0214  2A0A               	goto	l815
  1130  0215                     l817:	
  1131  0215  0824               	movf	strlen@s,w
  1132  0216  00A0               	movwf	??_strlen
  1133  0217  3080               	movlw	128
  1134  0218  00A1               	movwf	??_strlen+1
  1135  0219  09A0               	comf	??_strlen,f
  1136  021A  09A1               	comf	??_strlen+1,f
  1137  021B  0AA0               	incf	??_strlen,f
  1138  021C  1903               	skipnz
  1139  021D  0AA1               	incf	??_strlen+1,f
  1140  021E  0825               	movf	strlen@cp,w
  1141  021F  00A2               	movwf	??_strlen+2
  1142  0220  3080               	movlw	128
  1143  0221  00A3               	movwf	??_strlen+3
  1144  0222  0820               	movf	??_strlen,w
  1145  0223  0722               	addwf	??_strlen+2,w
  1146  0224  00F5               	movwf	?_strlen
  1147  0225  0821               	movf	??_strlen+1,w
  1148  0226  1803               	skipnc
  1149  0227  0A21               	incf	??_strlen+1,w
  1150  0228  0723               	addwf	??_strlen+3,w
  1151  0229  00F6               	movwf	?_strlen+1
  1152  022A  0008               	return
  1153  022B                     __end_of_strlen:	
  1154                           
  1155                           	psect	text5
  1156  027C                     __ptext5:	
  1157 ;; *************** function _escreve *****************
  1158 ;; Defined at:
  1159 ;;		line 71 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  valor           1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  valor           1    5[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1173 ;;      Params:         0       0       0       0
  1174 ;;      Locals:         1       0       0       0
  1175 ;;      Temps:          0       0       0       0
  1176 ;;      Totals:         1       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_imprime
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _escreve
  1189  027C                     _escreve:	
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _escreve: [wreg]
  1193                           ;escreve@valor stored from wreg
  1194  027C  00F5               	movwf	escreve@valor
  1195                           
  1196                           ;main.c: 73: TXIF = 0;
  1197  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1198  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1199  027F  120C               	bcf	12,4	;volatile
  1200                           
  1201                           ;main.c: 74: TXREG = valor;
  1202  0280  0875               	movf	escreve@valor,w
  1203  0281  0099               	movwf	25	;volatile
  1204  0282                     l55:	
  1205                           ;main.c: 75: while(TXIF ==0);
  1206                           
  1207  0282  1A0C               	btfsc	12,4	;volatile
  1208  0283  0008               	return
  1209  0284  2A82               	goto	l55
  1210  0285                     __end_of_escreve:	
  1211                           
  1212                           	psect	text6
  1213  0267                     __ptext6:	
  1214 ;; *************** function _eeprom_read *****************
  1215 ;; Defined at:
  1216 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/pic/eeread.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  addr            1    wreg     unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  addr            1    6[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1230 ;;      Params:         0       0       0       0
  1231 ;;      Locals:         1       0       0       0
  1232 ;;      Temps:          1       0       0       0
  1233 ;;      Totals:         2       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _eeprom_read
  1246  0267                     _eeprom_read:	
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1250                           ;eeprom_read@addr stored from wreg
  1251  0267  00F6               	movwf	eeprom_read@addr
  1252  0268                     l83:	
  1253  0268  0064               	clrwdt	;# 
  1254  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1255  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1256  026B  189C               	btfsc	28,1	;volsfr
  1257  026C  2A68               	goto	l83
  1258  026D  0876               	movf	eeprom_read@addr,w
  1259  026E  009B               	movwf	27	;volatile
  1260  026F  303F               	movlw	63
  1261  0270  00F5               	movwf	??_eeprom_read
  1262  0271  0875               	movf	??_eeprom_read,w
  1263  0272  059C               	andwf	28,f	;volsfr
  1264  0273  141C               	bsf	28,0	;volsfr
  1265  0274  1003               	clrc
  1266  0275  181C               	btfsc	28,0	;volsfr
  1267  0276  1403               	setc
  1268  0277  3000               	movlw	0
  1269  0278  1803               	skipnc
  1270  0279  3001               	movlw	1
  1271  027A  081A               	movf	26,w	;volatile
  1272  027B  0008               	return
  1273  027C                     __end_of_eeprom_read:	
  1274                           
  1275                           	psect	text7
  1276  0250                     __ptext7:	
  1277 ;; *************** function _RS232 *****************
  1278 ;; Defined at:
  1279 ;;		line 32 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1293 ;;      Params:         0       0       0       0
  1294 ;;      Locals:         0       0       0       0
  1295 ;;      Temps:          5       0       0       0
  1296 ;;      Totals:         5       0       0       0
  1297 ;;Total ram usage:        5 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		Interrupt level 1
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function _RS232
  1308  0250                     _RS232:	
  1309                           
  1310                           ;main.c: 34: if (RCIF == 1){
  1311  0250  1E8C               	btfss	12,5	;volatile
  1312  0251  2A58               	goto	i1l649
  1313                           
  1314                           ;main.c: 35: caracter = RCREG;
  1315  0252  081A               	movf	26,w	;volatile
  1316  0253  00F0               	movwf	??_RS232
  1317  0254  0870               	movf	??_RS232,w
  1318  0255  00F8               	movwf	_caracter
  1319                           
  1320                           ;main.c: 36: flag_interrupcao = 1;
  1321  0256  1477               	bsf	_flag_interrupcao/(0+8),_flag_interrupcao& (0+7)
  1322                           
  1323                           ;main.c: 37: RCIF = 0;
  1324  0257  128C               	bcf	12,5	;volatile
  1325  0258                     i1l649:	
  1326                           
  1327                           ;main.c: 38: }
  1328                           ;main.c: 39: if(INTF == 1){
  1329  0258  1C8B               	btfss	11,1	;volatile
  1330  0259  2A5C               	goto	i1l47
  1331                           
  1332                           ;main.c: 40: flag_sensor = 1;
  1333  025A  14F7               	bsf	_flag_sensor/(0+8),_flag_sensor& (0+7)
  1334                           
  1335                           ;main.c: 41: INTF = 0;
  1336  025B  108B               	bcf	11,1	;volatile
  1337  025C                     i1l47:	
  1338  025C  0874               	movf	??_RS232+4,w
  1339  025D  00FF               	movwf	127
  1340  025E  0873               	movf	??_RS232+3,w
  1341  025F  008A               	movwf	10
  1342  0260  0872               	movf	??_RS232+2,w
  1343  0261  0084               	movwf	4
  1344  0262  0E71               	swapf	(??_RS232+1)^(0+-128),w
  1345  0263  0083               	movwf	3
  1346  0264  0EFE               	swapf	126,f
  1347  0265  0E7E               	swapf	126,w
  1348  0266  0009               	retfie
  1349  0267                     __end_of_RS232:	
  1350  007E                     btemp	set	126	;btemp
  1351  007E                     wtemp	set	126
  1352  007E                     wtemp0	set	126
  1353  0080                     wtemp1	set	128
  1354  0082                     wtemp2	set	130
  1355  0084                     wtemp3	set	132
  1356  0086                     wtemp4	set	134
  1357  0088                     wtemp5	set	136
  1358  007F                     wtemp6	set	127
  1359  007E                     ttemp	set	126
  1360  007E                     ttemp0	set	126
  1361  0081                     ttemp1	set	129
  1362  0084                     ttemp2	set	132
  1363  0087                     ttemp3	set	135
  1364  007F                     ttemp4	set	127
  1365  007E                     ltemp	set	126
  1366  007E                     ltemp0	set	126
  1367  0082                     ltemp1	set	130
  1368  0086                     ltemp2	set	134
  1369  0080                     ltemp3	set	128
  1370                           
  1371                           	psect	intentry
  1372  0004                     __pintentry:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _RS232: [wreg]
  1375                           
  1376  0004                     interrupt_function:	
  1377  007E                     saved_w	set	btemp
  1378  0004  00FE               	movwf	btemp
  1379  0005  0E03               	swapf	3,w
  1380  0006  00F1               	movwf	??_RS232+1
  1381  0007  0804               	movf	4,w
  1382  0008  00F2               	movwf	??_RS232+2
  1383  0009  080A               	movf	10,w
  1384  000A  00F3               	movwf	??_RS232+3
  1385  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1386  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1387  000D  087F               	movf	btemp+1,w
  1388  000E  00F4               	movwf	??_RS232+4
  1389  000F  2A50               	ljmp	_RS232


Data Sizes:
    Strings     88
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     35      35
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[44]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[44]), 

    imprime@frase	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[44]), 


Critical Paths under _main in COMMON

    _main->_eeprom_read
    _inicializa_RS232->___aldiv
    _imprime->_strlen

Critical Paths under _RS232 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicializa_RS232
    _inicializa_RS232->___aldiv
    _imprime->_strlen

Critical Paths under _RS232 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1452
                                             30 BANK0      5     5      0
                        _eeprom_read
                            _imprime
                   _inicializa_RS232
 ---------------------------------------------------------------------------------
 (1) _inicializa_RS232                                    20    14      6    1012
                                             14 BANK0     16    10      6
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     724
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _imprime                                              4     4      0     406
                                              6 BANK0      4     4      0
                            _escreve
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               8     6      2     160
                                              5 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _escreve                                              1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RS232                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_read
   _imprime
     _escreve
     _strlen
   _inicializa_RS232
     ___aldiv

 _RS232 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     23      23       3       43.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      2C      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Sep  8 22:54:18 2015

                         pc 0002                 __CFG_CP$OFF 0000                          l55 0282  
                        l83 0268                          _RD 04E0                          _WR 04E1  
                        fsr 0004                 __CFG_LVP$ON 0000           ?_inicializa_RS232 002E  
                       l224 00CB                         l711 00DC                         l721 00FC  
                       l733 0131                         l815 020A                         l831 0237  
                       l719 00EC                         l751 0060                         l817 0215  
                       l737 013F                         l729 0124                         l865 01F3  
                       l859 01EE                         _GIE 005F                         u305 0125  
                       u340 0045                         u341 0046                         u350 0088  
                       u342 004B                         u351 0089                         u343 004C  
                       u352 008E                         u265 00F0                         u353 008F  
              __CFG_CPD$OFF 0000                         u427 01C4                         u285 00FE  
                       u437 01E7                         u295 0113                         u447 01FB  
                       u457 0244                         fsr0 0004          ??_inicializa_RS232 0034  
                      STR_1 014E                        STR_2 017A                        _PEIE 005E  
                      _INTF 0059                        _RCIE 0465                        _RCIF 0065  
                      i1l47 025C                        _TXIE 0464                        _TXIF 0064  
                      _main 01A6                        btemp 007E                        ltemp 007E  
                      start 0010                        ttemp 007E                        wtemp 007E  
             imprime@indice 0029             __end_of___aldiv 0148                       ?_main 0070  
                     _EEADR 009B               __CFG_WDTE$OFF 0000                       _RS232 0250  
                     i1l649 0258                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTB 0006                       _TRISB 0086  
                     _TXREG 0019                       _TXSTA 0098             __end_of_escreve 0285  
           __end_of_imprime 0250              __pbitbssCOMMON 03B8              __CFG_BOREN$OFF 0000  
                     pclath 000A                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
      inicializa_RS232@modo 0032              __CFG_MCLRE$OFF 0000             __initialization 0011  
            imprime@tamanho 0027                __end_of_main 0203                      ??_main 003E  
                    ?_RS232 0070  inicializa_RS232@velocidade 002E                      _EEDATA 009A  
                    _EECON1 009C              __CFG_PWRTE$OFF 0000        __size_of_eeprom_read 0015  
                 ??___aldiv 0075                      _strlen 0203                   ??_escreve 0075  
                 ??_imprime 0026                      saved_w 007E                escreve@valor 0075  
   __end_of__initialization 0013             eeprom_read@addr 0076               __end_of_RS232 0267  
     inicializa_RS232@valor 0038              __pcstackCOMMON 0070        _inicializa_RS232$511 003A  
                   ??_RS232 0070   __size_of_inicializa_RS232 00A4                  __pmaintext 01A6  
                __pintentry 0004                     ?_strlen 0075                  __stringtab 0148  
          _flag_interrupcao 03B8                     ___aldiv 00B9                     __ptext1 0015  
                   __ptext2 00B9                     __ptext3 022B                     __ptext4 0203  
                   __ptext5 027C                     __ptext6 0267                     __ptext7 0250  
           __size_of_strlen 0028                     _escreve 027C                     _imprime 022B  
          ___aldiv@dividend 0024        end_of_initialization 0013            ___aldiv@quotient 002A  
                   strlen@s 0024            _inicializa_RS232 0015               ??_eeprom_read 0075  
                main@mytype 0042                imprime@frase 0028              __end_of_strlen 022B  
       start_initialization 0011         __end_of_eeprom_read 027C                    ??_strlen 0020  
               __pbssCOMMON 0078                   ___latbits 0000               __pcstackBANK0 0020  
                  ?___aldiv 0020                   __pstrings 0148                    ?_escreve 0070  
            __size_of_RS232 0017                    ?_imprime 0070                 _flag_sensor 03B9  
           ___aldiv@divisor 0020           interrupt_function 0004             ___aldiv@counter 0028  
               _eeprom_read 0267    __end_of_inicializa_RS232 00B9                 __stringbase 014D  
          __size_of___aldiv 008F          __end_of__stringtab 014E                    _caracter 0078  
          __size_of_escreve 0009            __size_of_imprime 0025               __size_of_main 005D  
                  main@myid 0041                  _INTCONbits 000B                    intlevel1 0000  
                 stringcode 0148                    strlen@cp 0025                    stringdir 0148  
                  stringtab 0148                ___aldiv@sign 0029          __CFG_FOSC$INTOSCIO 0000  
              ?_eeprom_read 0070  
