

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Sep  7 02:16:57 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001F                     	;# 
    43  0081                     	;# 
    44  0085                     	;# 
    45  0086                     	;# 
    46  008C                     	;# 
    47  008E                     	;# 
    48  0092                     	;# 
    49  0098                     	;# 
    50  0099                     	;# 
    51  009A                     	;# 
    52  009B                     	;# 
    53  009C                     	;# 
    54  009D                     	;# 
    55  009F                     	;# 
    56  000B                     _INTCONbits	set	11
    57  0006                     _PORTB	set	6
    58  001A                     _RCREG	set	26
    59  0018                     _RCSTA	set	24
    60  0019                     _TXREG	set	25
    61  005F                     _GIE	set	95
    62  0059                     _INTF	set	89
    63  005E                     _PEIE	set	94
    64  0065                     _RCIF	set	101
    65  0064                     _TXIF	set	100
    66  0099                     _SPBRG	set	153
    67  0086                     _TRISB	set	134
    68  0098                     _TXSTA	set	152
    69  0465                     _RCIE	set	1125
    70  0464                     _TXIE	set	1124
    71                           
    72                           	psect	strings
    73  01E6                     __pstrings:	
    74  01E6                     stringtab:	
    75  01E6                     __stringtab:	
    76  01E6                     stringcode:	
    77                           ;	String table - string pointers are 1 byte each
    78                           
    79  01E6                     stringdir:	
    80  01E6  3001               	movlw	high stringdir
    81  01E7  008A               	movwf	10
    82  01E8  0804               	movf	4,w
    83  01E9  0A84               	incf	4,f
    84  01EA  0782               	addwf	2,f
    85  01EB                     __stringbase:	
    86  01EB  3400               	retlw	0
    87  01EC                     __end_of__stringtab:	
    88  01EC                     STR_1:	
    89  01EC  3448               	retlw	72	;'H'
    90  01ED  3449               	retlw	73	;'I'
    91  01EE  3447               	retlw	71	;'G'
    92  01EF  3448               	retlw	72	;'H'
    93  01F0  340A               	retlw	10
    94  01F1  340D               	retlw	13
    95  01F2  3400               	retlw	0
    96                           
    97                           ; #config settings
    98  0000                     
    99                           	psect	cinit
   100  0011                     start_initialization:	
   101  0011                     __initialization:	
   102                           
   103                           ; Clear objects allocated to BITCOMMON
   104  0011  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   105                           
   106                           ; Clear objects allocated to COMMON
   107  0012  01F8               	clrf	__pbssCOMMON& (0+127)
   108  0013                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  0013                     __end_of__initialization:	
   112  0013  0183               	clrf	3
   113  0014  2948               	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	bitbssCOMMON
   116  03B8                     __pbitbssCOMMON:	
   117  03B8                     _flag_interrupcao:	
   118  03B8                     	ds	1
   119  03B9                     _flag_sensor:	
   120  03B9                     	ds	1
   121                           
   122                           	psect	bssCOMMON
   123  0078                     __pbssCOMMON:	
   124  0078                     _caracter:	
   125  0078                     	ds	1
   126                           
   127                           	psect	cstackCOMMON
   128  0070                     __pcstackCOMMON:	
   129  0070                     ?_RS232:	
   130  0070                     ??_RS232:	
   131                           ; 0 bytes @ 0x0
   132                           
   133  0070                     ?_escreve:	
   134                           ; 0 bytes @ 0x0
   135                           
   136  0070                     ?_imprime:	
   137                           ; 0 bytes @ 0x0
   138                           
   139  0070                     ?_main:	
   140                           ; 0 bytes @ 0x0
   141                           
   142                           
   143                           ; 0 bytes @ 0x0
   144  0070                     	ds	5
   145  0075                     ??_escreve:	
   146  0075                     ??___aldiv:	
   147                           ; 0 bytes @ 0x5
   148                           
   149  0075                     ?_strlen:	
   150                           ; 0 bytes @ 0x5
   151                           
   152  0075                     escreve@valor:	
   153                           ; 2 bytes @ 0x5
   154                           
   155                           
   156                           ; 1 bytes @ 0x5
   157  0075                     	ds	2
   158                           
   159                           	psect	cstackBANK0
   160  0020                     __pcstackBANK0:	
   161  0020                     ??_strlen:	
   162  0020                     ?___aldiv:	
   163                           ; 0 bytes @ 0x0
   164                           
   165  0020                     ___aldiv@divisor:	
   166                           ; 4 bytes @ 0x0
   167                           
   168                           
   169                           ; 4 bytes @ 0x0
   170  0020                     	ds	4
   171  0024                     strlen@s:	
   172  0024                     ___aldiv@dividend:	
   173                           ; 1 bytes @ 0x4
   174                           
   175                           
   176                           ; 4 bytes @ 0x4
   177  0024                     	ds	1
   178  0025                     strlen@cp:	
   179                           
   180                           ; 1 bytes @ 0x5
   181  0025                     	ds	1
   182  0026                     ??_imprime:	
   183                           
   184                           ; 0 bytes @ 0x6
   185  0026                     	ds	1
   186  0027                     imprime@tamanho:	
   187                           
   188                           ; 1 bytes @ 0x7
   189  0027                     	ds	1
   190  0028                     imprime@frase:	
   191  0028                     ___aldiv@counter:	
   192                           ; 1 bytes @ 0x8
   193                           
   194                           
   195                           ; 1 bytes @ 0x8
   196  0028                     	ds	1
   197  0029                     imprime@indice:	
   198  0029                     ___aldiv@sign:	
   199                           ; 1 bytes @ 0x9
   200                           
   201                           
   202                           ; 1 bytes @ 0x9
   203  0029                     	ds	1
   204  002A                     ___aldiv@quotient:	
   205                           
   206                           ; 4 bytes @ 0xA
   207  002A                     	ds	4
   208  002E                     ?_inicializa_RS232:	
   209  002E                     inicializa_RS232@velocidade:	
   210                           ; 0 bytes @ 0xE
   211                           
   212                           
   213                           ; 4 bytes @ 0xE
   214  002E                     	ds	4
   215  0032                     inicializa_RS232@modo:	
   216                           
   217                           ; 2 bytes @ 0x12
   218  0032                     	ds	2
   219  0034                     ??_inicializa_RS232:	
   220                           
   221                           ; 0 bytes @ 0x14
   222  0034                     	ds	4
   223  0038                     inicializa_RS232@valor:	
   224                           
   225                           ; 2 bytes @ 0x18
   226  0038                     	ds	2
   227  003A                     _inicializa_RS232$496:	
   228                           
   229                           ; 4 bytes @ 0x1A
   230  003A                     	ds	4
   231  003E                     ??_main:	
   232                           
   233                           ; 0 bytes @ 0x1E
   234  003E                     	ds	3
   235                           
   236                           	psect	maintext
   237  0148                     __pmaintext:	
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 89 in file "main.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;		None               void
   250 ;; Registers used:
   251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   257 ;;      Params:         0       0       0       0
   258 ;;      Locals:         0       0       0       0
   259 ;;      Temps:          0       3       0       0
   260 ;;      Totals:         0       3       0       0
   261 ;;Total ram usage:        3 bytes
   262 ;; Hardware stack levels required when called:    4
   263 ;; This function calls:
   264 ;;		_imprime
   265 ;;		_inicializa_RS232
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  0148                     _main:	
   274                           
   275                           ;main.c: 91: TRISB = 0X03;
   276                           
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   279  0148  3003               	movlw	3
   280  0149  1683               	bsf	3,5	;RP0=1, select bank1
   281  014A  1303               	bcf	3,6	;RP1=0, select bank1
   282  014B  0086               	movwf	6	;volatile
   283                           
   284                           ;main.c: 92: PORTB = 0;
   285  014C  1283               	bcf	3,5	;RP0=0, select bank0
   286  014D  1303               	bcf	3,6	;RP1=0, select bank0
   287  014E  0186               	clrf	6	;volatile
   288                           
   289                           ;main.c: 93: inicializa_RS232(9600,1);
   290  014F  3000               	movlw	0
   291  0150  00B1               	movwf	inicializa_RS232@velocidade+3
   292  0151  3000               	movlw	0
   293  0152  00B0               	movwf	inicializa_RS232@velocidade+2
   294  0153  3025               	movlw	37
   295  0154  00AF               	movwf	inicializa_RS232@velocidade+1
   296  0155  3080               	movlw	128
   297  0156  00AE               	movwf	inicializa_RS232@velocidade
   298  0157  3001               	movlw	1
   299  0158  00B2               	movwf	inicializa_RS232@modo
   300  0159  3000               	movlw	0
   301  015A  00B3               	movwf	inicializa_RS232@modo+1
   302  015B  2015               	fcall	_inicializa_RS232
   303                           
   304                           ;main.c: 94: PEIE = 1;
   305  015C  170B               	bsf	11,6	;volatile
   306                           
   307                           ;main.c: 95: GIE = 1;
   308  015D  178B               	bsf	11,7	;volatile
   309                           
   310                           ;main.c: 96: _delay((unsigned long)((8000)*(4000000/4000.0)));
   311  015E  3029               	movlw	41
   312  015F  1283               	bcf	3,5	;RP0=0, select bank0
   313  0160  1303               	bcf	3,6	;RP1=0, select bank0
   314  0161  00C0               	movwf	??_main+2
   315  0162  3096               	movlw	150
   316  0163  00BF               	movwf	??_main+1
   317  0164  30A6               	movlw	166
   318  0165  00BE               	movwf	??_main
   319  0166                     u407:	
   320  0166  0BBE               	decfsz	??_main,f
   321  0167  2966               	goto	u407
   322  0168  0BBF               	decfsz	??_main+1,f
   323  0169  2966               	goto	u407
   324  016A  0BC0               	decfsz	??_main+2,f
   325  016B  2966               	goto	u407
   326                           
   327                           ;main.c: 97: INTCONbits.INTE = 1;
   328  016C  160B               	bsf	11,4	;volatile
   329  016D                     l798:	
   330                           ;main.c: 101: for(;;)
   331                           
   332                           
   333                           ;main.c: 102: {
   334                           ;main.c: 110: if(flag_sensor == 1){
   335  016D  1CF7               	btfss	_flag_sensor/(0+8),_flag_sensor& (0+7)
   336  016E  2972               	goto	l804
   337                           
   338                           ;main.c: 111: imprime("HIGH\n\r");
   339  016F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   340  0170  21AA               	fcall	_imprime
   341                           
   342                           ;main.c: 112: flag_sensor = 0;
   343  0171  10F7               	bcf	_flag_sensor/(0+8),_flag_sensor& (0+7)
   344  0172                     l804:	
   345                           
   346                           ;main.c: 113: }
   347                           ;main.c: 114: _delay((unsigned long)((2000)*(4000000/4000.0)));
   348  0172  300B               	movlw	11
   349  0173  1283               	bcf	3,5	;RP0=0, select bank0
   350  0174  1303               	bcf	3,6	;RP1=0, select bank0
   351  0175  00C0               	movwf	??_main+2
   352  0176  3026               	movlw	38
   353  0177  00BF               	movwf	??_main+1
   354  0178  3066               	movlw	102
   355  0179  00BE               	movwf	??_main
   356  017A                     u417:	
   357  017A  0BBE               	decfsz	??_main,f
   358  017B  297A               	goto	u417
   359  017C  0BBF               	decfsz	??_main+1,f
   360  017D  297A               	goto	u417
   361  017E  0BC0               	decfsz	??_main+2,f
   362  017F  297A               	goto	u417
   363  0180  2981               	nop2
   364                           
   365                           ;main.c: 115: }
   366  0181  296D               	goto	l798
   367  0182                     __end_of_main:	
   368                           
   369                           	psect	text1
   370  0015                     __ptext1:	
   371 ;; *************** function _inicializa_RS232 *****************
   372 ;; Defined at:
   373 ;;		line 42 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  velocidade      4   14[BANK0 ] long 
   376 ;;  modo            2   18[BANK0 ] int 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  valor           2   24[BANK0 ] int 
   379 ;; Return value:  Size  Location     Type
   380 ;;		None               void
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   388 ;;      Params:         0       6       0       0
   389 ;;      Locals:         0       6       0       0
   390 ;;      Temps:          0       4       0       0
   391 ;;      Totals:         0      16       0       0
   392 ;;Total ram usage:       16 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; Hardware stack levels required when called:    2
   395 ;; This function calls:
   396 ;;		___aldiv
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _inicializa_RS232
   404  0015                     _inicializa_RS232:	
   405                           
   406                           ;main.c: 48: RCSTA = 0x90;
   407                           
   408                           ;incstack = 0
   409                           ; Regs used in _inicializa_RS232: [wreg+status,2+status,0+pclath+cstack]
   410  0015  3090               	movlw	144
   411  0016  1283               	bcf	3,5	;RP0=0, select bank0
   412  0017  1303               	bcf	3,6	;RP1=0, select bank0
   413  0018  0098               	movwf	24	;volatile
   414                           
   415                           ;main.c: 51: int valor;
   416                           ;main.c: 52: if(modo == 1)
   417  0019  0332               	decf	inicializa_RS232@modo,w
   418  001A  0433               	iorwf	inicializa_RS232@modo+1,w
   419  001B  1D03               	btfss	3,2
   420  001C  2860               	goto	l718
   421                           
   422                           ;main.c: 53: {
   423                           ;main.c: 54: TXSTA = 0x24;
   424  001D  3024               	movlw	36
   425  001E  1683               	bsf	3,5	;RP0=1, select bank1
   426  001F  1303               	bcf	3,6	;RP1=0, select bank1
   427  0020  0098               	movwf	24	;volatile
   428                           
   429                           ;main.c: 55: valor =(int)(((4000000/velocidade)-16)/16);
   430  0021  30F0               	movlw	240
   431  0022  1283               	bcf	3,5	;RP0=0, select bank0
   432  0023  1303               	bcf	3,6	;RP1=0, select bank0
   433  0024  00B4               	movwf	??_inicializa_RS232
   434  0025  30FF               	movlw	255
   435  0026  00B5               	movwf	??_inicializa_RS232+1
   436  0027  30FF               	movlw	255
   437  0028  00B6               	movwf	??_inicializa_RS232+2
   438  0029  30FF               	movlw	255
   439  002A  00B7               	movwf	??_inicializa_RS232+3
   440  002B  0831               	movf	inicializa_RS232@velocidade+3,w
   441  002C  00A3               	movwf	___aldiv@divisor+3
   442  002D  0830               	movf	inicializa_RS232@velocidade+2,w
   443  002E  00A2               	movwf	___aldiv@divisor+2
   444  002F  082F               	movf	inicializa_RS232@velocidade+1,w
   445  0030  00A1               	movwf	___aldiv@divisor+1
   446  0031  082E               	movf	inicializa_RS232@velocidade,w
   447  0032  00A0               	movwf	___aldiv@divisor
   448  0033  3000               	movlw	0
   449  0034  00A7               	movwf	___aldiv@dividend+3
   450  0035  303D               	movlw	61
   451  0036  00A6               	movwf	___aldiv@dividend+2
   452  0037  3009               	movlw	9
   453  0038  00A5               	movwf	___aldiv@dividend+1
   454  0039  3000               	movlw	0
   455  003A  00A4               	movwf	___aldiv@dividend
   456  003B  20B9               	fcall	___aldiv
   457  003C  1283               	bcf	3,5	;RP0=0, select bank0
   458  003D  1303               	bcf	3,6	;RP1=0, select bank0
   459  003E  0820               	movf	?___aldiv,w
   460  003F  07B4               	addwf	??_inicializa_RS232,f
   461  0040  0821               	movf	?___aldiv+1,w
   462  0041  1803               	skipnc
   463  0042  0F21               	incfsz	?___aldiv+1,w
   464  0043  2845               	goto	u330
   465  0044  2846               	goto	u331
   466  0045                     u330:	
   467  0045  07B5               	addwf	??_inicializa_RS232+1,f
   468  0046                     u331:	
   469  0046  0822               	movf	?___aldiv+2,w
   470  0047  1803               	skipnc
   471  0048  0F22               	incfsz	?___aldiv+2,w
   472  0049  284B               	goto	u332
   473  004A  284C               	goto	u333
   474  004B                     u332:	
   475  004B  07B6               	addwf	??_inicializa_RS232+2,f
   476  004C                     u333:	
   477  004C  0823               	movf	?___aldiv+3,w
   478  004D  1803               	skipnc
   479  004E  0A23               	incf	?___aldiv+3,w
   480  004F  07B7               	addwf	??_inicializa_RS232+3,f
   481  0050  0837               	movf	??_inicializa_RS232+3,w
   482  0051  00BD               	movwf	_inicializa_RS232$496+3
   483  0052  0836               	movf	??_inicializa_RS232+2,w
   484  0053  00BC               	movwf	_inicializa_RS232$496+2
   485  0054  0835               	movf	??_inicializa_RS232+1,w
   486  0055  00BB               	movwf	_inicializa_RS232$496+1
   487  0056  0834               	movf	??_inicializa_RS232,w
   488  0057  00BA               	movwf	_inicializa_RS232$496
   489                           
   490                           ;main.c: 55: valor =(int)(((4000000/velocidade)-16)/16);
   491  0058  3000               	movlw	0
   492  0059  00A3               	movwf	___aldiv@divisor+3
   493  005A  3000               	movlw	0
   494  005B  00A2               	movwf	___aldiv@divisor+2
   495  005C  3000               	movlw	0
   496  005D  00A1               	movwf	___aldiv@divisor+1
   497  005E  3010               	movlw	16
   498  005F  28A2               	goto	L1
   499  0060                     l718:	
   500                           ;main.c: 56: }
   501                           
   502                           
   503                           ;main.c: 57: else
   504                           ;main.c: 58: {
   505                           ;main.c: 59: TXSTA = 0x20;
   506  0060  3020               	movlw	32
   507  0061  1683               	bsf	3,5	;RP0=1, select bank1
   508  0062  1303               	bcf	3,6	;RP1=0, select bank1
   509  0063  0098               	movwf	24	;volatile
   510                           
   511                           ;main.c: 60: valor =(int)(((4000000/velocidade)-64)/64);
   512  0064  30C0               	movlw	192
   513  0065  1283               	bcf	3,5	;RP0=0, select bank0
   514  0066  1303               	bcf	3,6	;RP1=0, select bank0
   515  0067  00B4               	movwf	??_inicializa_RS232
   516  0068  30FF               	movlw	255
   517  0069  00B5               	movwf	??_inicializa_RS232+1
   518  006A  30FF               	movlw	255
   519  006B  00B6               	movwf	??_inicializa_RS232+2
   520  006C  30FF               	movlw	255
   521  006D  00B7               	movwf	??_inicializa_RS232+3
   522  006E  0831               	movf	inicializa_RS232@velocidade+3,w
   523  006F  00A3               	movwf	___aldiv@divisor+3
   524  0070  0830               	movf	inicializa_RS232@velocidade+2,w
   525  0071  00A2               	movwf	___aldiv@divisor+2
   526  0072  082F               	movf	inicializa_RS232@velocidade+1,w
   527  0073  00A1               	movwf	___aldiv@divisor+1
   528  0074  082E               	movf	inicializa_RS232@velocidade,w
   529  0075  00A0               	movwf	___aldiv@divisor
   530  0076  3000               	movlw	0
   531  0077  00A7               	movwf	___aldiv@dividend+3
   532  0078  303D               	movlw	61
   533  0079  00A6               	movwf	___aldiv@dividend+2
   534  007A  3009               	movlw	9
   535  007B  00A5               	movwf	___aldiv@dividend+1
   536  007C  3000               	movlw	0
   537  007D  00A4               	movwf	___aldiv@dividend
   538  007E  20B9               	fcall	___aldiv
   539  007F  1283               	bcf	3,5	;RP0=0, select bank0
   540  0080  1303               	bcf	3,6	;RP1=0, select bank0
   541  0081  0820               	movf	?___aldiv,w
   542  0082  07B4               	addwf	??_inicializa_RS232,f
   543  0083  0821               	movf	?___aldiv+1,w
   544  0084  1803               	skipnc
   545  0085  0F21               	incfsz	?___aldiv+1,w
   546  0086  2888               	goto	u340
   547  0087  2889               	goto	u341
   548  0088                     u340:	
   549  0088  07B5               	addwf	??_inicializa_RS232+1,f
   550  0089                     u341:	
   551  0089  0822               	movf	?___aldiv+2,w
   552  008A  1803               	skipnc
   553  008B  0F22               	incfsz	?___aldiv+2,w
   554  008C  288E               	goto	u342
   555  008D  288F               	goto	u343
   556  008E                     u342:	
   557  008E  07B6               	addwf	??_inicializa_RS232+2,f
   558  008F                     u343:	
   559  008F  0823               	movf	?___aldiv+3,w
   560  0090  1803               	skipnc
   561  0091  0A23               	incf	?___aldiv+3,w
   562  0092  07B7               	addwf	??_inicializa_RS232+3,f
   563  0093  0837               	movf	??_inicializa_RS232+3,w
   564  0094  00BD               	movwf	_inicializa_RS232$496+3
   565  0095  0836               	movf	??_inicializa_RS232+2,w
   566  0096  00BC               	movwf	_inicializa_RS232$496+2
   567  0097  0835               	movf	??_inicializa_RS232+1,w
   568  0098  00BB               	movwf	_inicializa_RS232$496+1
   569  0099  0834               	movf	??_inicializa_RS232,w
   570  009A  00BA               	movwf	_inicializa_RS232$496
   571                           
   572                           ;main.c: 60: valor =(int)(((4000000/velocidade)-64)/64);
   573  009B  3000               	movlw	0
   574  009C  00A3               	movwf	___aldiv@divisor+3
   575  009D  3000               	movlw	0
   576  009E  00A2               	movwf	___aldiv@divisor+2
   577  009F  3000               	movlw	0
   578  00A0  00A1               	movwf	___aldiv@divisor+1
   579  00A1  3040               	movlw	64
   580  00A2                     L1:	
   581  00A2  00A0               	movwf	___aldiv@divisor
   582  00A3  083D               	movf	_inicializa_RS232$496+3,w
   583  00A4  00A7               	movwf	___aldiv@dividend+3
   584  00A5  083C               	movf	_inicializa_RS232$496+2,w
   585  00A6  00A6               	movwf	___aldiv@dividend+2
   586  00A7  083B               	movf	_inicializa_RS232$496+1,w
   587  00A8  00A5               	movwf	___aldiv@dividend+1
   588  00A9  083A               	movf	_inicializa_RS232$496,w
   589  00AA  00A4               	movwf	___aldiv@dividend
   590  00AB  20B9               	fcall	___aldiv
   591  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   592  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   593  00AE  0821               	movf	?___aldiv+1,w
   594  00AF  00B9               	movwf	inicializa_RS232@valor+1
   595  00B0  0820               	movf	?___aldiv,w
   596  00B1  00B8               	movwf	inicializa_RS232@valor
   597                           
   598                           ;main.c: 61: }
   599                           ;main.c: 62: SPBRG = valor;
   600  00B2  0838               	movf	inicializa_RS232@valor,w
   601  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   602  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   603  00B5  0099               	movwf	25	;volatile
   604                           
   605                           ;main.c: 63: RCIE = 1;
   606  00B6  168C               	bsf	12,5	;volatile
   607                           
   608                           ;main.c: 64: TXIE = 0;
   609  00B7  120C               	bcf	12,4	;volatile
   610  00B8  0008               	return
   611  00B9                     __end_of_inicializa_RS232:	
   612                           
   613                           	psect	text2
   614  00B9                     __ptext2:	
   615 ;; *************** function ___aldiv *****************
   616 ;; Defined at:
   617 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/aldiv.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  divisor         4    0[BANK0 ] long 
   620 ;;  dividend        4    4[BANK0 ] long 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  quotient        4   10[BANK0 ] long 
   623 ;;  sign            1    9[BANK0 ] unsigned char 
   624 ;;  counter         1    8[BANK0 ] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  4    0[BANK0 ] long 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   634 ;;      Params:         0       8       0       0
   635 ;;      Locals:         0       6       0       0
   636 ;;      Temps:          1       0       0       0
   637 ;;      Totals:         1      14       0       0
   638 ;;Total ram usage:       15 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_inicializa_RS232
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function ___aldiv
   650  00B9                     ___aldiv:	
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   654  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   655  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   656  00BB  01A9               	clrf	___aldiv@sign
   657  00BC  1FA3               	btfss	___aldiv@divisor+3,7
   658  00BD  28CB               	goto	l207
   659  00BE  09A0               	comf	___aldiv@divisor,f
   660  00BF  09A1               	comf	___aldiv@divisor+1,f
   661  00C0  09A2               	comf	___aldiv@divisor+2,f
   662  00C1  09A3               	comf	___aldiv@divisor+3,f
   663  00C2  0AA0               	incf	___aldiv@divisor,f
   664  00C3  1903               	skipnz
   665  00C4  0AA1               	incf	___aldiv@divisor+1,f
   666  00C5  1903               	skipnz
   667  00C6  0AA2               	incf	___aldiv@divisor+2,f
   668  00C7  1903               	skipnz
   669  00C8  0AA3               	incf	___aldiv@divisor+3,f
   670  00C9  01A9               	clrf	___aldiv@sign
   671  00CA  0AA9               	incf	___aldiv@sign,f
   672  00CB                     l207:	
   673  00CB  1FA7               	btfss	___aldiv@dividend+3,7
   674  00CC  28DC               	goto	l678
   675  00CD  09A4               	comf	___aldiv@dividend,f
   676  00CE  09A5               	comf	___aldiv@dividend+1,f
   677  00CF  09A6               	comf	___aldiv@dividend+2,f
   678  00D0  09A7               	comf	___aldiv@dividend+3,f
   679  00D1  0AA4               	incf	___aldiv@dividend,f
   680  00D2  1903               	skipnz
   681  00D3  0AA5               	incf	___aldiv@dividend+1,f
   682  00D4  1903               	skipnz
   683  00D5  0AA6               	incf	___aldiv@dividend+2,f
   684  00D6  1903               	skipnz
   685  00D7  0AA7               	incf	___aldiv@dividend+3,f
   686  00D8  3001               	movlw	1
   687  00D9  00F5               	movwf	??___aldiv
   688  00DA  0875               	movf	??___aldiv,w
   689  00DB  06A9               	xorwf	___aldiv@sign,f
   690  00DC                     l678:	
   691  00DC  3000               	movlw	0
   692  00DD  00AD               	movwf	___aldiv@quotient+3
   693  00DE  3000               	movlw	0
   694  00DF  00AC               	movwf	___aldiv@quotient+2
   695  00E0  3000               	movlw	0
   696  00E1  00AB               	movwf	___aldiv@quotient+1
   697  00E2  3000               	movlw	0
   698  00E3  00AA               	movwf	___aldiv@quotient
   699  00E4  0823               	movf	___aldiv@divisor+3,w
   700  00E5  0422               	iorwf	___aldiv@divisor+2,w
   701  00E6  0421               	iorwf	___aldiv@divisor+1,w
   702  00E7  0420               	iorwf	___aldiv@divisor,w
   703  00E8  1903               	skipnz
   704  00E9  2931               	goto	l700
   705  00EA  01A8               	clrf	___aldiv@counter
   706  00EB  0AA8               	incf	___aldiv@counter,f
   707  00EC                     l686:	
   708  00EC  1BA3               	btfsc	___aldiv@divisor+3,7
   709  00ED  28FC               	goto	l688
   710  00EE  3001               	movlw	1
   711  00EF  00F5               	movwf	??___aldiv
   712  00F0                     u255:	
   713  00F0  1003               	clrc
   714  00F1  0DA0               	rlf	___aldiv@divisor,f
   715  00F2  0DA1               	rlf	___aldiv@divisor+1,f
   716  00F3  0DA2               	rlf	___aldiv@divisor+2,f
   717  00F4  0DA3               	rlf	___aldiv@divisor+3,f
   718  00F5  0BF5               	decfsz	??___aldiv,f
   719  00F6  28F0               	goto	u255
   720  00F7  3001               	movlw	1
   721  00F8  00F5               	movwf	??___aldiv
   722  00F9  0875               	movf	??___aldiv,w
   723  00FA  07A8               	addwf	___aldiv@counter,f
   724  00FB  28EC               	goto	l686
   725  00FC                     l688:	
   726  00FC  3001               	movlw	1
   727  00FD  00F5               	movwf	??___aldiv
   728  00FE                     u275:	
   729  00FE  1003               	clrc
   730  00FF  0DAA               	rlf	___aldiv@quotient,f
   731  0100  0DAB               	rlf	___aldiv@quotient+1,f
   732  0101  0DAC               	rlf	___aldiv@quotient+2,f
   733  0102  0DAD               	rlf	___aldiv@quotient+3,f
   734  0103  0BF5               	decfsz	??___aldiv,f
   735  0104  28FE               	goto	u275
   736  0105  0823               	movf	___aldiv@divisor+3,w
   737  0106  0227               	subwf	___aldiv@dividend+3,w
   738  0107  1D03               	skipz
   739  0108  2913               	goto	u285
   740  0109  0822               	movf	___aldiv@divisor+2,w
   741  010A  0226               	subwf	___aldiv@dividend+2,w
   742  010B  1D03               	skipz
   743  010C  2913               	goto	u285
   744  010D  0821               	movf	___aldiv@divisor+1,w
   745  010E  0225               	subwf	___aldiv@dividend+1,w
   746  010F  1D03               	skipz
   747  0110  2913               	goto	u285
   748  0111  0820               	movf	___aldiv@divisor,w
   749  0112  0224               	subwf	___aldiv@dividend,w
   750  0113                     u285:	
   751  0113  1C03               	skipc
   752  0114  2924               	goto	l696
   753  0115  0820               	movf	___aldiv@divisor,w
   754  0116  02A4               	subwf	___aldiv@dividend,f
   755  0117  0821               	movf	___aldiv@divisor+1,w
   756  0118  1C03               	skipc
   757  0119  0F21               	incfsz	___aldiv@divisor+1,w
   758  011A  02A5               	subwf	___aldiv@dividend+1,f
   759  011B  0822               	movf	___aldiv@divisor+2,w
   760  011C  1C03               	skipc
   761  011D  0F22               	incfsz	___aldiv@divisor+2,w
   762  011E  02A6               	subwf	___aldiv@dividend+2,f
   763  011F  0823               	movf	___aldiv@divisor+3,w
   764  0120  1C03               	skipc
   765  0121  0F23               	incfsz	___aldiv@divisor+3,w
   766  0122  02A7               	subwf	___aldiv@dividend+3,f
   767  0123  142A               	bsf	___aldiv@quotient,0
   768  0124                     l696:	
   769  0124  3001               	movlw	1
   770  0125                     u295:	
   771  0125  1003               	clrc
   772  0126  0CA3               	rrf	___aldiv@divisor+3,f
   773  0127  0CA2               	rrf	___aldiv@divisor+2,f
   774  0128  0CA1               	rrf	___aldiv@divisor+1,f
   775  0129  0CA0               	rrf	___aldiv@divisor,f
   776  012A  3EFF               	addlw	-1
   777  012B  1D03               	skipz
   778  012C  2925               	goto	u295
   779  012D  3001               	movlw	1
   780  012E  02A8               	subwf	___aldiv@counter,f
   781  012F  1D03               	btfss	3,2
   782  0130  28FC               	goto	l688
   783  0131                     l700:	
   784  0131  0829               	movf	___aldiv@sign,w
   785  0132  1903               	btfsc	3,2
   786  0133  293F               	goto	l704
   787  0134  09AA               	comf	___aldiv@quotient,f
   788  0135  09AB               	comf	___aldiv@quotient+1,f
   789  0136  09AC               	comf	___aldiv@quotient+2,f
   790  0137  09AD               	comf	___aldiv@quotient+3,f
   791  0138  0AAA               	incf	___aldiv@quotient,f
   792  0139  1903               	skipnz
   793  013A  0AAB               	incf	___aldiv@quotient+1,f
   794  013B  1903               	skipnz
   795  013C  0AAC               	incf	___aldiv@quotient+2,f
   796  013D  1903               	skipnz
   797  013E  0AAD               	incf	___aldiv@quotient+3,f
   798  013F                     l704:	
   799  013F  082D               	movf	___aldiv@quotient+3,w
   800  0140  00A3               	movwf	?___aldiv+3
   801  0141  082C               	movf	___aldiv@quotient+2,w
   802  0142  00A2               	movwf	?___aldiv+2
   803  0143  082B               	movf	___aldiv@quotient+1,w
   804  0144  00A1               	movwf	?___aldiv+1
   805  0145  082A               	movf	___aldiv@quotient,w
   806  0146  00A0               	movwf	?___aldiv
   807  0147  0008               	return
   808  0148                     __end_of___aldiv:	
   809                           
   810                           	psect	text3
   811  01AA                     __ptext3:	
   812 ;; *************** function _imprime *****************
   813 ;; Defined at:
   814 ;;		line 73 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  frase           1    wreg     PTR const unsigned char 
   817 ;;		 -> STR_1(7), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  frase           1    8[BANK0 ] PTR const unsigned char 
   820 ;;		 -> STR_1(7), 
   821 ;;  indice          1    9[BANK0 ] unsigned char 
   822 ;;  tamanho         1    7[BANK0 ] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;		None               void
   825 ;; Registers used:
   826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         0       0       0       0
   833 ;;      Locals:         0       3       0       0
   834 ;;      Temps:          0       1       0       0
   835 ;;      Totals:         0       4       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    3
   839 ;; This function calls:
   840 ;;		_escreve
   841 ;;		_strlen
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _imprime
   849  01AA                     _imprime:	
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _imprime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   853                           ;imprime@frase stored from wreg
   854  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   855  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   856  01AC  00A8               	movwf	imprime@frase
   857                           
   858                           ;main.c: 75: char indice = 0;
   859  01AD  01A9               	clrf	imprime@indice
   860                           
   861                           ;main.c: 76: char tamanho = strlen(frase);
   862  01AE  0828               	movf	imprime@frase,w
   863  01AF  2182               	fcall	_strlen
   864  01B0  0875               	movf	?_strlen,w
   865  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   866  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   867  01B3  00A6               	movwf	??_imprime
   868  01B4  0826               	movf	??_imprime,w
   869  01B5  00A7               	movwf	imprime@tamanho
   870  01B6                     l782:	
   871                           ;main.c: 77: while(indice < tamanho )
   872                           
   873  01B6  0827               	movf	imprime@tamanho,w
   874  01B7  0229               	subwf	imprime@indice,w
   875  01B8  1803               	btfsc	3,0
   876  01B9  0008               	return
   877                           
   878                           ;main.c: 78: {
   879                           ;main.c: 79: escreve(frase[indice]);
   880  01BA  0829               	movf	imprime@indice,w
   881  01BB  0728               	addwf	imprime@frase,w
   882  01BC  0084               	movwf	4
   883  01BD  21E6               	fcall	stringdir
   884  01BE  21F3               	fcall	_escreve
   885                           
   886                           ;main.c: 80: _delay((unsigned long)((1)*(4000000/4000.0)));
   887  01BF  30F9               	movlw	249
   888  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   889  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   890  01C2  00A6               	movwf	??_imprime
   891  01C3                     u427:	
   892  01C3  0000               	nop
   893  01C4  0BA6               	decfsz	??_imprime,f
   894  01C5  29C3               	goto	u427
   895  01C6  29C7               	nop2	;nop
   896  01C7  0000               	nop
   897                           
   898                           ;main.c: 81: indice++;
   899  01C8  3001               	movlw	1
   900  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   901  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   902  01CB  00A6               	movwf	??_imprime
   903  01CC  0826               	movf	??_imprime,w
   904  01CD  07A9               	addwf	imprime@indice,f
   905  01CE  29B6               	goto	l782
   906  01CF                     __end_of_imprime:	
   907                           
   908                           	psect	text4
   909  0182                     __ptext4:	
   910 ;; *************** function _strlen *****************
   911 ;; Defined at:
   912 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/strlen.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  s               1    wreg     PTR const unsigned char 
   915 ;;		 -> STR_1(7), 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  s               1    4[BANK0 ] PTR const unsigned char 
   918 ;;		 -> STR_1(7), 
   919 ;;  cp              1    5[BANK0 ] PTR const unsigned char 
   920 ;;		 -> STR_1(7), 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2    5[COMMON] unsigned int 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   930 ;;      Params:         2       0       0       0
   931 ;;      Locals:         0       2       0       0
   932 ;;      Temps:          0       4       0       0
   933 ;;      Totals:         2       6       0       0
   934 ;;Total ram usage:        8 bytes
   935 ;; Hardware stack levels used:    2
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_imprime
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _strlen
   946  0182                     _strlen:	
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   950                           ;strlen@s stored from wreg
   951  0182  1283               	bcf	3,5	;RP0=0, select bank0
   952  0183  1303               	bcf	3,6	;RP1=0, select bank0
   953  0184  00A4               	movwf	strlen@s
   954  0185  0824               	movf	strlen@s,w
   955  0186  00A0               	movwf	??_strlen
   956  0187  0820               	movf	??_strlen,w
   957  0188  00A5               	movwf	strlen@cp
   958  0189                     l766:	
   959  0189  0825               	movf	strlen@cp,w
   960  018A  0084               	movwf	4
   961  018B  21E6               	fcall	stringdir
   962  018C  3A00               	xorlw	0
   963  018D  1903               	btfsc	3,2
   964  018E  2994               	goto	l768
   965  018F  3001               	movlw	1
   966  0190  00A0               	movwf	??_strlen
   967  0191  0820               	movf	??_strlen,w
   968  0192  07A5               	addwf	strlen@cp,f
   969  0193  2989               	goto	l766
   970  0194                     l768:	
   971  0194  0824               	movf	strlen@s,w
   972  0195  00A0               	movwf	??_strlen
   973  0196  3080               	movlw	128
   974  0197  00A1               	movwf	??_strlen+1
   975  0198  09A0               	comf	??_strlen,f
   976  0199  09A1               	comf	??_strlen+1,f
   977  019A  0AA0               	incf	??_strlen,f
   978  019B  1903               	skipnz
   979  019C  0AA1               	incf	??_strlen+1,f
   980  019D  0825               	movf	strlen@cp,w
   981  019E  00A2               	movwf	??_strlen+2
   982  019F  3080               	movlw	128
   983  01A0  00A3               	movwf	??_strlen+3
   984  01A1  0820               	movf	??_strlen,w
   985  01A2  0722               	addwf	??_strlen+2,w
   986  01A3  00F5               	movwf	?_strlen
   987  01A4  0821               	movf	??_strlen+1,w
   988  01A5  1803               	skipnc
   989  01A6  0A21               	incf	??_strlen+1,w
   990  01A7  0723               	addwf	??_strlen+3,w
   991  01A8  00F6               	movwf	?_strlen+1
   992  01A9  0008               	return
   993  01AA                     __end_of_strlen:	
   994                           
   995                           	psect	text5
   996  01F3                     __ptext5:	
   997 ;; *************** function _escreve *****************
   998 ;; Defined at:
   999 ;;		line 67 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  valor           1    wreg     unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  valor           1    5[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1013 ;;      Params:         0       0       0       0
  1014 ;;      Locals:         1       0       0       0
  1015 ;;      Temps:          0       0       0       0
  1016 ;;      Totals:         1       0       0       0
  1017 ;;Total ram usage:        1 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_imprime
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _escreve
  1029  01F3                     _escreve:	
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in _escreve: [wreg]
  1033                           ;escreve@valor stored from wreg
  1034  01F3  00F5               	movwf	escreve@valor
  1035                           
  1036                           ;main.c: 69: TXIF = 0;
  1037  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1038  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1039  01F6  120C               	bcf	12,4	;volatile
  1040                           
  1041                           ;main.c: 70: TXREG = valor;
  1042  01F7  0875               	movf	escreve@valor,w
  1043  01F8  0099               	movwf	25	;volatile
  1044  01F9                     l53:	
  1045                           ;main.c: 71: while(TXIF ==0);
  1046                           
  1047  01F9  1A0C               	btfsc	12,4	;volatile
  1048  01FA  0008               	return
  1049  01FB  29F9               	goto	l53
  1050  01FC                     __end_of_escreve:	
  1051                           
  1052                           	psect	text6
  1053  01CF                     __ptext6:	
  1054 ;; *************** function _RS232 *****************
  1055 ;; Defined at:
  1056 ;;		line 28 in file "main.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;		None               void
  1063 ;; Registers used:
  1064 ;;		wreg
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1070 ;;      Params:         0       0       0       0
  1071 ;;      Locals:         0       0       0       0
  1072 ;;      Temps:          5       0       0       0
  1073 ;;      Totals:         5       0       0       0
  1074 ;;Total ram usage:        5 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		Interrupt level 1
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _RS232
  1085  01CF                     _RS232:	
  1086                           
  1087                           ;main.c: 30: if (RCIF == 1){
  1088  01CF  1E8C               	btfss	12,5	;volatile
  1089  01D0  29D7               	goto	i1l628
  1090                           
  1091                           ;main.c: 31: caracter = RCREG;
  1092  01D1  081A               	movf	26,w	;volatile
  1093  01D2  00F0               	movwf	??_RS232
  1094  01D3  0870               	movf	??_RS232,w
  1095  01D4  00F8               	movwf	_caracter
  1096                           
  1097                           ;main.c: 32: flag_interrupcao = 1;
  1098  01D5  1477               	bsf	_flag_interrupcao/(0+8),_flag_interrupcao& (0+7)
  1099                           
  1100                           ;main.c: 33: RCIF = 0;
  1101  01D6  128C               	bcf	12,5	;volatile
  1102  01D7                     i1l628:	
  1103                           
  1104                           ;main.c: 34: }
  1105                           ;main.c: 35: if(INTF == 1){
  1106  01D7  1C8B               	btfss	11,1	;volatile
  1107  01D8  29DB               	goto	i1l45
  1108                           
  1109                           ;main.c: 36: flag_sensor = 1;
  1110  01D9  14F7               	bsf	_flag_sensor/(0+8),_flag_sensor& (0+7)
  1111                           
  1112                           ;main.c: 37: INTF = 0;
  1113  01DA  108B               	bcf	11,1	;volatile
  1114  01DB                     i1l45:	
  1115  01DB  0874               	movf	??_RS232+4,w
  1116  01DC  00FF               	movwf	127
  1117  01DD  0873               	movf	??_RS232+3,w
  1118  01DE  008A               	movwf	10
  1119  01DF  0872               	movf	??_RS232+2,w
  1120  01E0  0084               	movwf	4
  1121  01E1  0E71               	swapf	(??_RS232+1)^(0+-128),w
  1122  01E2  0083               	movwf	3
  1123  01E3  0EFE               	swapf	126,f
  1124  01E4  0E7E               	swapf	126,w
  1125  01E5  0009               	retfie
  1126  01E6                     __end_of_RS232:	
  1127  007E                     btemp	set	126	;btemp
  1128  007E                     wtemp	set	126
  1129  007E                     wtemp0	set	126
  1130  0080                     wtemp1	set	128
  1131  0082                     wtemp2	set	130
  1132  0084                     wtemp3	set	132
  1133  0086                     wtemp4	set	134
  1134  0088                     wtemp5	set	136
  1135  007F                     wtemp6	set	127
  1136  007E                     ttemp	set	126
  1137  007E                     ttemp0	set	126
  1138  0081                     ttemp1	set	129
  1139  0084                     ttemp2	set	132
  1140  0087                     ttemp3	set	135
  1141  007F                     ttemp4	set	127
  1142  007E                     ltemp	set	126
  1143  007E                     ltemp0	set	126
  1144  0082                     ltemp1	set	130
  1145  0086                     ltemp2	set	134
  1146  0080                     ltemp3	set	128
  1147                           
  1148                           	psect	intentry
  1149  0004                     __pintentry:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _RS232: [wreg]
  1152                           
  1153  0004                     interrupt_function:	
  1154  007E                     saved_w	set	btemp
  1155  0004  00FE               	movwf	btemp
  1156  0005  0E03               	swapf	3,w
  1157  0006  00F1               	movwf	??_RS232+1
  1158  0007  0804               	movf	4,w
  1159  0008  00F2               	movwf	??_RS232+2
  1160  0009  080A               	movf	10,w
  1161  000A  00F3               	movwf	??_RS232+3
  1162  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1163  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1164  000D  087F               	movf	btemp+1,w
  1165  000E  00F4               	movwf	??_RS232+4
  1166  000F  29CF               	ljmp	_RS232


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     33      33
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    imprime@frase	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _inicializa_RS232->___aldiv
    _imprime->_strlen

Critical Paths under _RS232 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_inicializa_RS232
    _inicializa_RS232->___aldiv
    _imprime->_strlen

Critical Paths under _RS232 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1388
                                             30 BANK0      3     3      0
                            _imprime
                   _inicializa_RS232
 ---------------------------------------------------------------------------------
 (1) _inicializa_RS232                                    20    14      6    1012
                                             14 BANK0     16    10      6
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     724
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _imprime                                              4     4      0     376
                                              6 BANK0      4     4      0
                            _escreve
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               8     6      2     160
                                              5 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _escreve                                              1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RS232                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _imprime
     _escreve
     _strlen
   _inicializa_RS232
     ___aldiv

 _RS232 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     21      21       3       41.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      2A      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Sep  7 02:16:57 2015

                         pc 0002                 __CFG_CP$OFF 0000                          l53 01F9  
                        fsr 0004                 __CFG_LVP$ON 0000           ?_inicializa_RS232 002E  
                       l207 00CB                         l700 0131                         l704 013F  
                       l804 0172                         l718 0060                         l766 0189  
                       l782 01B6                         l686 00EC                         l678 00DC  
                       l768 0194                         l696 0124                         l688 00FC  
                       l798 016D                         _GIE 005F                         u330 0045  
                       u331 0046                         u340 0088                         u332 004B  
                       u341 0089                         u333 004C                         u342 008E  
                       u255 00F0                         u343 008F                         u407 0166  
                       u417 017A                __CFG_CPD$OFF 0000                         u427 01C3  
                       u275 00FE                         u285 0113                         u295 0125  
                       fsr0 0004          ??_inicializa_RS232 0034                        STR_1 01EC  
                      _PEIE 005E                        _INTF 0059                        _RCIE 0465  
                      _RCIF 0065                        i1l45 01DB                        _TXIE 0464  
                      _TXIF 0064                        _main 0148                        btemp 007E  
                      ltemp 007E                        start 0010                        ttemp 007E  
                      wtemp 007E               imprime@indice 0029             __end_of___aldiv 0148  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _RS232 01CF  
                     i1l628 01D7                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTB 0006                       _TRISB 0086  
                     _TXREG 0019                       _TXSTA 0098             __end_of_escreve 01FC  
           __end_of_imprime 01CF              __pbitbssCOMMON 03B8              __CFG_BOREN$OFF 0000  
                     pclath 000A                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
      inicializa_RS232@modo 0032              __CFG_MCLRE$OFF 0000             __initialization 0011  
            imprime@tamanho 0027                __end_of_main 0182                      ??_main 003E  
                    ?_RS232 0070  inicializa_RS232@velocidade 002E              __CFG_PWRTE$OFF 0000  
                 ??___aldiv 0075                      _strlen 0182                   ??_escreve 0075  
                 ??_imprime 0026                      saved_w 007E                escreve@valor 0075  
   __end_of__initialization 0013               __end_of_RS232 01E6       inicializa_RS232@valor 0038  
            __pcstackCOMMON 0070        _inicializa_RS232$496 003A                     ??_RS232 0070  
 __size_of_inicializa_RS232 00A4                  __pmaintext 0148                  __pintentry 0004  
                   ?_strlen 0075                  __stringtab 01E6            _flag_interrupcao 03B8  
                   ___aldiv 00B9                     __ptext1 0015                     __ptext2 00B9  
                   __ptext3 01AA                     __ptext4 0182                     __ptext5 01F3  
                   __ptext6 01CF             __size_of_strlen 0028                     _escreve 01F3  
                   _imprime 01AA            ___aldiv@dividend 0024        end_of_initialization 0013  
          ___aldiv@quotient 002A                     strlen@s 0024            _inicializa_RS232 0015  
              imprime@frase 0028              __end_of_strlen 01AA         start_initialization 0011  
                  ??_strlen 0020                 __pbssCOMMON 0078                   ___latbits 0000  
             __pcstackBANK0 0020                    ?___aldiv 0020                   __pstrings 01E6  
                  ?_escreve 0070              __size_of_RS232 0017                    ?_imprime 0070  
               _flag_sensor 03B9             ___aldiv@divisor 0020           interrupt_function 0004  
           ___aldiv@counter 0028    __end_of_inicializa_RS232 00B9                 __stringbase 01EB  
          __size_of___aldiv 008F          __end_of__stringtab 01EC                    _caracter 0078  
          __size_of_escreve 0009            __size_of_imprime 0025               __size_of_main 003A  
                _INTCONbits 000B                    intlevel1 0000                   stringcode 01E6  
                  strlen@cp 0025                    stringdir 01E6                    stringtab 01E6  
              ___aldiv@sign 0029          __CFG_FOSC$INTOSCIO 0000  
